00000000 d _TLS_MODULE_BASE_
00000000 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000001 D CTRPluginFramework::PrivColor::_format
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000024 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000025 00000001 b __tls_guard
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000084 T CTRPluginFramework::IsInRace()
0700133c 000000bc T CTRPluginFramework::GetRacePointer()
070013f8 0000009c T CTRPluginFramework::GetItemPointer()
07001494 0000002c T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
070014c0 0000002c T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
070014ec 0000002c T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
07001518 00000028 T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
07001540 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
07001544 00000028 T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
0700156c 000001a4 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07001710 00000018 t __tcf_0
07001728 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070017ac 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700188c 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07001a6c 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07001a70 00000004 T CTRPluginFramework::OnProcessExit()
07001a74 00000080 W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::vector(std::initializer_list<CTRPluginFramework::MenuEntry*>, std::allocator<CTRPluginFramework::MenuEntry*> const&)
07001a74 00000080 W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::vector(std::initializer_list<CTRPluginFramework::MenuEntry*>, std::allocator<CTRPluginFramework::MenuEntry*> const&)
07001af4 000005e4 T CTRPluginFramework::main()
070020d8 T svcCustomBackdoor
070020e0 T svcConvertVAToPA
070020e8 T svcFlushDataCacheRange
070020f0 T svcInvalidateEntireInstructionCache
070020f8 T svcMapProcessMemoryEx
0700210c T svcUnmapProcessMemoryEx
07002114 T svcControlProcess
0700211c 00000070 t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700218c 000000d8 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07002264 000004ac t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07002710 00001008 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07003718 0000008c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
070037a4 00000094 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
07003838 00000044 T CTRPluginFramework::InitializeRandomEngine()
0700387c 000000e0 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700395c 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07003964 0000004c T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070039b0 0000018c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07003b3c 00000144 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07003c80 000000c0 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07003d40 00000058 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07003d98 000000cc T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07003e64 0000004c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07003eb0 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07003f60 0000001c T CTRPluginFramework::ResetColor[abi:cxx11]()
07003f7c 00000068 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07003fe4 0000003c T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004020 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07004020 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0700404c 00000018 T CTRPluginFramework::LineReader::~LineReader()
0700404c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07004064 0000017c T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070041e0 00000010 T CTRPluginFramework::Process::GetHandle()
070041f0 00000010 T CTRPluginFramework::Process::GetTitleID()
07004200 000000b4 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070042b4 000000a0 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07004354 00000024 T CTRPluginFramework::Process::GetTextSize()
07004378 00000008 T CTRPluginFramework::Process::Pause()
07004380 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07004390 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07004438 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700443c 00000050 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700448c 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
070044a8 0000001c T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
070044c4 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070044e4 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07004504 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07004524 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07004548 00000160 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070046a8 00000254 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070048fc 00000150 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004a4c 0000016c T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004bb8 00000088 T CTRPluginFramework::File::Close() const
07004c40 00000224 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07004e64 000000cc T CTRPluginFramework::File::Read(void*, unsigned long) const
07004f30 000000fc T CTRPluginFramework::File::Write(void const*, unsigned long)
0700502c 00000050 T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700507c 000000e8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07005164 00000008 T CTRPluginFramework::File::Tell() const
0700516c 00000034 T CTRPluginFramework::File::Rewind() const
070051a0 00000030 T CTRPluginFramework::File::Flush() const
070051d0 00000074 T CTRPluginFramework::File::GetSize() const
07005244 00000008 T CTRPluginFramework::File::IsOpen() const
0700524c 000000b8 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07005308 00000048 T CTRPluginFramework::File::File()
07005308 00000048 T CTRPluginFramework::File::File()
07005350 00000068 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07005350 00000068 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070053b8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07005468 00000268 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070056d0 000002ec t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070059bc 000005e8 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07005fa4 000001ac T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006150 00000160 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070062b0 00000168 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006418 00000254 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700666c 00000160 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070067cc 000002b0 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07006a7c 00000050 T CTRPluginFramework::Directory::Close() const
07006acc 000000b8 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07006b84 00000008 T CTRPluginFramework::Directory::IsOpen() const
07006b8c 0000003c T CTRPluginFramework::Directory::Directory()
07006b8c 0000003c T CTRPluginFramework::Directory::Directory()
07006bc8 00000060 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07006bc8 00000060 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07006c28 000000f4 T CTRPluginFramework::Directory::~Directory()
07006c28 000000f4 T CTRPluginFramework::Directory::~Directory()
07006d1c 000002cc W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006fe8 000002a8 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07007290 000001d0 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07007460 00000908 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07007d68 00000218 T CTRPluginFramework::Directory::_List() const
07007f80 00000214 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07008194 0000021c T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070083b0 00000020 T CTRPluginFramework::Clock::Clock()
070083b0 00000020 T CTRPluginFramework::Clock::Clock()
070083d0 00000030 T CTRPluginFramework::Clock::GetElapsedTime() const
07008400 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07008438 00000038 T CTRPluginFramework::Clock::Restart()
07008470 00000078 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07008470 00000078 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
070084e8 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
070084e8 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07008514 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07008528 00000038 T CTRPluginFramework::PluginMenu::Run() const
07008560 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07008568 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07008578 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07008584 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07008584 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070085d0 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070085d0 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07008614 0000007c T CTRPluginFramework::MessageBox::~MessageBox()
07008614 0000007c T CTRPluginFramework::MessageBox::~MessageBox()
07008690 00000008 T CTRPluginFramework::MessageBox::operator()() const
07008698 0000007c T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
07008698 0000007c T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
07008714 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07008714 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
0700873c 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070087e8 000000bc T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070087e8 000000bc T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070088a4 00000024 T CTRPluginFramework::Hotkey::~Hotkey()
070088a4 00000024 T CTRPluginFramework::Hotkey::~Hotkey()
070088c8 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
070088d0 000000a8 T CTRPluginFramework::Hotkey::AskForKeys()
07008978 000000a4 T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07008a1c 00000238 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07008c54 00000018 T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07008c54 00000018 T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07008c6c 00000050 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008c6c 00000050 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008cbc 00000040 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07008cfc 00000180 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07008e7c 00000028 T CTRPluginFramework::HotkeyManager::Count()
07008ea4 00000340 W void std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::_M_realloc_insert<CTRPluginFramework::Hotkey const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hotkey*, std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> > >, CTRPluginFramework::Hotkey const&)
070091e4 000000f0 T CTRPluginFramework::HotkeyManager::operator+=(CTRPluginFramework::Hotkey const&)
070092d4 00000278 T CTRPluginFramework::HotkeyManager::AskForKeys()
0700954c 00000224 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07009770 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
070097bc 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070097bc 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700980c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700980c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700983c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07009844 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07009908 000000f4 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
070099fc 000000ac T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07009aa8 000000ac T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07009b54 000000a0 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07009bf4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009bf4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009c3c 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07009c3c 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07009ca8 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07009ca8 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07009cd4 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07009cdc 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07009cf8 00000028 T CTRPluginFramework::Keyboard::Open() const
07009d20 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07009de8 000001d4 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07009fbc 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
0700a084 000001d4 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
0700a258 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
0700a320 000001d4 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0700a4f4 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
0700a58c 00000194 T CTRPluginFramework::Keyboard::Open(float&, float) const
0700a720 00000070 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0700a790 00000084 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700a814 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
0700a81c 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
0700a824 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
0700a82c 00000114 T CTRPluginFramework::Color::Fade(float)
0700a940 00000224 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
0700ab64 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
0700aba4 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
0700abac 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700ac58 00000024 T OnLoadCro
0700ac7c 00000004 W CTRPluginFramework::OnPluginToSwap()
0700ac80 00000004 W CTRPluginFramework::OnPluginFromSwap()
0700ac84 00000304 T CTRPluginFramework::Initialize()
0700af88 000000ac T CTRPluginFramework::ThreadExit()
0700b034 00000058 T abort
0700b08c 00000048 T CTRPluginFramework::ThreadInit(void*)
0700b0d4 000000a8 T __entrypoint
0700b180 00000618 T CTRPluginFramework::KeepThreadMain(void*)
0700b798 00000040 t _GLOBAL__sub_I_g_gspEventThreadPriority
0700b7d8 00000020 t _GLOBAL__sub_D_g_gspEventThreadPriority
0700b7f8 000000b8 t NCSNDCmd_Add
0700b8b0 00000084 t NCSNDCmd_Execute.constprop.0
0700b934 0000005c T ncsndNotifyAptEvent
0700b990 00000004 t ncsndAptHook
0700b994 000001c8 T ncsndInit
0700bb5c 000000ac T ncsndExit
0700bc08 00000024 T ncsndInitializeSound
0700bc2c 00000260 T ncsndPlaySound
0700be8c 00000040 T ncsndStopSound
0700becc 00000090 T ncsndIsPlaying
0700bf5c T LoadCROHooked
0700bf70 T AR__ExecuteRoutine
0700bf98 t stackBak
0700bfa0 0000003c t __ctru_get_reent
0700bfdc 0000003c T __getThreadLocalStorage
0700c018 000000f4 T __system_initSyscalls
0700c10c 00000020 T __libctru_exit
0700c12c 00000020 T __appExit
0700c14c 00000144 T __createThread
0700c290 00000138 T __startThread
0700c3c8 00000024 T threadGetHandle
0700c3ec 0000002c T threadFree
0700c418 00000024 T threadJoin
0700c43c 00000020 T threadGetCurrent
0700c45c 0000005c T threadExit
0700c4b8 00000040 t _thread_begin
0700c4f8 00000088 T plgLdrExit
0700c580 000000ec T plgLdrInit
0700c66c 00000050 T PLGLDR__GetPluginPath
0700c6bc 00000024 T PLGLDR__FetchEvent
0700c6e0 000000d4 T PLGLDR__Reply
0700c7b4 000000a8 T __system_allocateHeaps
0700c85c 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0700c888 000001ac t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0700ca34 000002a8 t CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&) [clone .part.0] [clone .isra.0]
0700ccdc 000002e4 T CTRPluginFrameworkImpl::Services::GSP::Initialize()
0700cfc0 000000dc T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
0700d09c 00000004 T __gsp__Update
0700d0a0 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
0700d0b8 00000028 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
0700d0e0 000000e0 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
0700d1c0 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
0700d208 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
0700d23c 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
0700d268 00000148 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
0700d3b0 00000030 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
0700d3e0 000000d0 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0700d4b0 00000040 t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0700d4f0 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0700d510 000000cc T CTRPluginFramework::SystemImpl::Initialize()
0700d5dc 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0700d5f4 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
0700d630 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
0700d650 0000003c T CTRPluginFramework::SystemImpl::Status()
0700d68c 00000004 W std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0700d690 0000000c W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_destroy()
0700d69c 00000278 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*) [clone .part.0]
0700d914 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0700d9c4 0000028c T CTRPluginFramework::Screenshot::TaskCallback(void*)
0700dc50 000003cc T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0700e01c 00000388 T CTRPluginFramework::Screenshot::UpdateFileCount()
0700e3a4 00000048 T CTRPluginFramework::Screenshot::Initialize()
0700e3ec 00000064 t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700e450 000000c8 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700e518 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
0700e530 00000164 T CTRPluginFramework::ScreenImpl::Initialize()
0700e694 00000054 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
0700e6e8 000000e4 T CTRPluginFramework::ScreenImpl::Fade(float)
0700e7cc 000000fc t CTRPluginFramework::ScreenImpl::Acquire(bool) [clone .part.0]
0700e8c8 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
0700e924 00000028 T CTRPluginFramework::ScreenImpl::Release()
0700e94c 0000007c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0700e9c8 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
0700ea60 00000034 T CTRPluginFramework::ScreenImpl::Copy()
0700ea94 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0700ea9c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0700eaf8 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0700eb48 0000003c T CTRPluginFramework::ScreenImpl::Clean()
0700eb84 000000bc T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
0700ec40 000000a4 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
0700ece4 0000007c T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
0700ed60 0000004c T CTRPluginFramework::ScreenImpl::SwapBuffer()
0700edac 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
0700edc0 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
0700eddc 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
0700edf8 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
0700ee00 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
0700ee08 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
0700ee10 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
0700ee2c 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0700ee48 00000068 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
0700eeb0 00000030 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
0700eee0 0000005c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
0700ef3c 00000064 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0700efa0 000000fc T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0700f09c 000000a8 T CTRPluginFramework::Scheduler::Initialize()
0700f144 0000004c T CTRPluginFramework::Scheduler::Exit()
0700f190 0000021c W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0700f3ac 00000160 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0700f50c 000001d0 W __gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > > std::__remove_if<__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, __gnu_cxx::__ops::_Iter_equals_val<std::shared_ptr<CTRPluginFramework::TaskContext> const> >(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, __gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, __gnu_cxx::__ops::_Iter_equals_val<std::shared_ptr<CTRPluginFramework::TaskContext> const>)
0700f6dc 000001e8 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0700f8c4 0000018c T CTRPluginFramework::Scheduler__CoreHandler(void*)
0700fa50 00000094 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0700fae4 00000178 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0700fc5c 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
0700fca8 00000098 T CTRPluginFramework::ProcessImpl::Play(bool)
0700fd40 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0700fd5c 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0700fd78 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0700fddc 00000074 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0700fe50 000000b0 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0700ff00 000000c4 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0700ffc4 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
0700fffc 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07010014 t _store_reg_loop
07010034 00000118 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0701014c 000000f0 T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0701023c 000000f0 T CTRPluginFramework::ProcessImpl::Initialize()
0701032c 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07010398 0000010c T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
070104a4 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
070104d0 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0701052c 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07010538 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07010548 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07010560 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
070105a0 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
070105e4 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
070105f8 00000004 T Kernel::Initialize()
070105fc 00000028 T Kernel::Memcpy(void*, void const*, unsigned long)
07010624 0000000c T KProcess::GetCurrent()
07010630 00000024 T KProcess::PatchCore2Access()
07010654 00000034 T KProcess__PatchCategory
07010688 00000034 T KProcess__PatchMaxPriority
070106bc 00000028 T KProcess::PatchMaxThreads()
070106e4 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07010704 000002d4 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
070109d8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07010a88 000000d4 T CTRPluginFramework::HookManager::HookManager()
07010a88 000000d4 T CTRPluginFramework::HookManager::HookManager()
07010b60 000000e8 T __hook__CheckTlsValue
07010c48 00000108 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
07010d50 00000068 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
07010db8 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07010e1c 0000000c T CTRPluginFramework::HookManager::Lock()
07010e28 0000000c T CTRPluginFramework::HookManager::Unlock()
07010e34 00000064 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
07010e98 00000074 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
07010f0c 00000134 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
07011040 00000090 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
070110d0 00000168 T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
07011238 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
07011244 0000003c t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
07011280 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070112a4 00000004 t addrMapNodeDestructor(rbtree_node*)
070112a8 00000148 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
070113f0 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
070113f8 00000068 T CTRPluginFramework::Heap::Free(void*)
07011460 0000000c T CTRPluginFramework::Heap::SpaceFree()
0701146c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07011478 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07011498 00000284 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701171c 00000238 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07011954 000000cc T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07011954 000000cc T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07011a20 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07011a4c 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
07011aa8 00000094 T CTRPluginFramework::EventManager::EventManager()
07011aa8 00000094 T CTRPluginFramework::EventManager::EventManager()
07011b3c 000001f0 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07011d2c 00000480 T CTRPluginFramework::EventManager::ProcessEvents()
070121b0 00000134 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
070122e4 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
070122ec 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
070122f4 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
070122f8 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
070122fc 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07012320 0000004c T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0701236c 00000130 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0701249c 0000025c T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
070126f8 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0701271c 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07012768 00000154 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07012768 00000154 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070128bc 00000054 T CTRPluginFramework::SubMenu::~SubMenu()
070128bc 00000054 T CTRPluginFramework::SubMenu::~SubMenu()
07012910 0000001c T CTRPluginFramework::SubMenu::operator()()
07012930 0000023c T CTRPluginFramework::SubMenu::Draw()
07012b6c 000000ec T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07012c58 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07012c60 00000374 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07012fd4 00000024 T CTRPluginFramework::SubMenu::OptionsCount()
07012ff8 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
07012ff8 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
070130fc 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07013104 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07013124 000001b0 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
070132d4 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070132f4 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07013310 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0701332c 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07013334 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07013340 00000f2c T CTRPluginFramework::PluginMenuImpl::Run()
0701426c 00000138 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
070143a4 000001e4 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07014588 000001cc T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07014754 00000110 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07014864 00000140 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
070149a4 0000025c W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07014c00 000001f8 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07014df8 000001dc T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07014fd4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07014fe0 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07015000 00000390 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015000 00000390 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015390 000002f0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07015390 000002f0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07015680 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07015688 00000094 t __tcf_0
0701571c 00000110 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0701582c 0000013c t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015968 00000694 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07015968 00000694 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07015ffc 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07016008 000003ac T CTRPluginFramework::PluginMenuHome::_RenderTop()
070163b4 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
070164e8 0000058c T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07016a74 00000124 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07016b98 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07016c28 000000e4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07016d0c 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
07016d90 000000b8 T CTRPluginFramework::PluginMenuHome::Init()
07016e48 000000a0 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07016ee8 00000060 T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07016f48 0000012c T CTRPluginFramework::PluginMenuHome::UpdateNote()
07017074 00000064 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070170d8 00000174 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07017250 000003f8 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07017648 000002c4 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0701790c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0701790c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07017948 000001a4 T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07017aec 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07017b44 0000024c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07017d90 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07017dec 00000150 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07017f3c 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
070180d8 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
070180f0 00000110 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07018200 00000374 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07018574 00000110 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07018684 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0701870c 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07018730 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07018744 00000124 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07018868 00000094 t __tcf_0
070188fc 000001f0 t CTRPluginFramework::ProcessPathString(unsigned char*)
07018aec 00000070 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07018b5c 00000290 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07018b5c 00000290 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07018dec 000000b4 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07018ea0 000002e0 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07019180 00000324 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
070194a4 000001d8 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0701967c 000001b0 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0701982c 000003e4 T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07019c10 00000284 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07019e94 00000360 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0701a1f4 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0701a380 00000238 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0701a5b8 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0701a684 00000248 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0701a8cc 00000238 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0701ab04 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0701ab14 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0701ab24 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0701ab34 00000058 W CTRPluginFramework::MenuItem::~MenuItem()
0701ab34 00000058 W CTRPluginFramework::MenuItem::~MenuItem()
0701ab8c 00000060 W CTRPluginFramework::MenuItem::~MenuItem()
0701abec 00000120 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701abec 00000120 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701ad0c 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701ad28 000000d0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ad28 000000d0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701adf8 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701adf8 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701aecc 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701aedc 00000294 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701b170 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0701b188 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701b1ac 000000bc T CTRPluginFramework::MenuFolderImpl::Clear()
0701b268 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0701b278 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0701b298 00000110 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701b3a8 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0701b408 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701b41c 00000028 T CTRPluginFramework::MenuEntryImpl::Enable()
0701b444 000002d4 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701b718 00000078 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701b718 00000078 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701b790 00000080 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701b810 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b810 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b8fc 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b8fc 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b9ec 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701b9f4 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701ba08 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701ba14 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701ba1c 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701ba40 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701ba5c 00000088 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701bae4 000000f4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701bae4 000000f4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701bbd8 0000014c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701bbd8 0000014c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701bd24 00000044 T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0701bd68 00000060 T CTRPluginFramework::Menu::CloseAll()
0701bdc8 00000058 T CTRPluginFramework::Menu::~Menu()
0701bdc8 00000058 T CTRPluginFramework::Menu::~Menu()
0701be20 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701be2c 00000008 T CTRPluginFramework::Menu::GetFolder() const
0701be34 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701be3c 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
0701be7c 00000400 T CTRPluginFramework::Menu::Draw() const
0701c280 000000c0 T CTRPluginFramework::Menu::_ScrollUp(int)
0701c340 00000358 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0701c698 00000184 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701c81c 0000008c T CTRPluginFramework::Menu::ShowNote()
0701c8a8 00000008 T CTRPluginFramework::Menu::CloseNote()
0701c8b0 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0701c8b8 0000003c W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0701c8f4 00000044 T CTRPluginFramework::Menu::Pop()
0701c938 000000b0 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701c9e8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701ca98 000001ec T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ca98 000001ec T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701cc84 00000200 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701cc84 00000200 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ce84 000000b8 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701ce84 000000b8 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701cf3c 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701cf44 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
0701cf4c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701cf54 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
0701cf5c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701cf64 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
0701cf6c 00000068 T CTRPluginFramework::KeyboardImpl::Clear()
0701cfd4 00000198 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701d16c 000004d4 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701d640 000001cc T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
0701d80c 00000084 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0701d890 000000d4 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701d964 00000090 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701d9f4 00000090 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701da84 0000018c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701dc10 0000017c T CTRPluginFramework::KeyboardImpl::_Update(float)
0701dd8c 000006e4 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701e470 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701e4d8 0000008c T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701e564 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
0701e60c 000005f8 T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0701ec04 0000008c T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701ec90 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701ec98 00000064 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0701ecfc 00000230 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701ef2c 00000114 W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0701f040 00000110 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
0701f150 00000374 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0701f4c4 00000188 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char, CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char&&, CTRPluginFramework::Rect<int>&)
0701f64c 0000007c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
0701f6c8 00000190 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701f858 00000088 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701f8e0 00000580 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701fe60 00000584 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
070203e4 000001d8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char const (&) [3], CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char const (&) [3], CTRPluginFramework::Rect<int>&)
070205bc 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07020678 000001d8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char const (&) [4], CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char const (&) [4], CTRPluginFramework::Rect<int>&)
07020850 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0702090c 00000a2c T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07021338 00000c40 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07021f78 00000188 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char&, CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char&, CTRPluginFramework::Rect<int>&)
07022100 0000007c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
0702217c 00000204 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07022380 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
070223c8 00000088 t CTRPluginFramework::KeyboardImpl::_Hexadecimal() [clone .part.0]
07022450 00000020 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07022470 000000a8 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07022518 000005e0 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07022af8 00000338 T CTRPluginFramework::KeyboardImpl::Run()
07022e30 0000004c W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07022e30 0000004c W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07022e7c 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07022ec0 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07022eec 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07022f9c 00000060 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07022f9c 00000060 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07022ffc 000000b0 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
070230ac 00000140 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
070231ec 00000084 T CTRPluginFramework::HotkeysModifier::_Update()
07023270 000001dc T CTRPluginFramework::HotkeysModifier::operator()()
0702344c 000002c8 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
07023714 000002f8 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07023714 000002f8 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07023a0c 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07023a0c 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07023a10 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023a10 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023a14 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023a14 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023a18 00000014 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07023a2c 00000014 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023a40 00000014 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023a54 000001a8 T CTRPluginFramework::HexEditor::ByteView::Draw()
07023bfc 000000f8 T CTRPluginFramework::HexEditor::IntegerView::Draw()
07023cf4 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07023e30 000003dc T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0702420c 0000025c T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07024468 00000324 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0702478c 000002b8 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07024a44 00000138 T CTRPluginFramework::HexEditor::~HexEditor()
07024a44 00000138 T CTRPluginFramework::HexEditor::~HexEditor()
07024b7c 0000019c T CTRPluginFramework::HexEditor::_CreateCheat()
07024d18 00000078 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07024d90 00000040 T CTRPluginFramework::HexEditor::_MoveForward()
07024dd0 000004c4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07024dd0 000004c4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07025294 000000b4 T CTRPluginFramework::HexEditor::SetView(unsigned long)
07025348 00000130 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07025478 00000010 T CTRPluginFramework::HexEditor::Refresh()
07025488 00000248 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
070256d0 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0702575c 0000009c T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
070257f8 000001b8 t CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short) [clone .part.0]
070259b0 00000050 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07025a00 00000050 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07025a50 00000050 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07025aa0 00000108 T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07025ba8 000000ec T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07025c94 000000dc T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07025d70 000002b0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07026020 00000234 T CTRPluginFramework::HexEditor::_Update()
07026254 000001a4 T CTRPluginFramework::HexEditor::_JumpTo(int)
070263f8 00000074 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0702646c 000002ec T CTRPluginFramework::HexEditor::_BrowseHistory()
07026758 000003ec T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07026b44 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07026bf4 0000068c t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07027280 00000260 T CTRPluginFramework::GuideReader::GuideReader()
07027280 00000260 T CTRPluginFramework::GuideReader::GuideReader()
070274e0 00000190 T CTRPluginFramework::GuideReader::_LoadBMP()
07027670 000007a8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0]
07027e18 0000015c t CTRPluginFramework::GuideReader::Draw() [clone .part.0]
07027f74 000000a8 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0702801c 000000e8 T CTRPluginFramework::Converter::Converter()
0702801c 000000e8 T CTRPluginFramework::Converter::Converter()
07028104 00000010 T CTRPluginFramework::Converter::Instance()
07028114 00000114 T CTRPluginFramework::Converter::_Draw()
07028228 000002b0 T CTRPluginFramework::Converter::operator()(unsigned long)
070284d8 00000288 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07028760 0000023c T CTRPluginFramework::Icon::DrawAbout(int, int)
0702899c 00000248 T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07028be4 00000248 T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07028e2c 00000248 T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07029074 00000248 T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
070292bc 00000248 T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07029504 0000023c T CTRPluginFramework::Icon::DrawController(int, int)
07029740 00000248 T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07029988 00000248 T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07029bd0 00000248 T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07029e18 00000248 T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0702a060 0000023c T CTRPluginFramework::Icon::DrawFolder(int, int)
0702a29c 00000248 T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0702a4e4 0000023c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0702a720 0000023c T CTRPluginFramework::Icon::DrawFile(int, int)
0702a95c 0000023c T CTRPluginFramework::Icon::DrawGameController(int, int)
0702ab98 00000248 T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0702ade0 0000023c T CTRPluginFramework::Icon::DrawGrid(int, int)
0702b01c 00000248 T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0702b264 0000023c T CTRPluginFramework::Icon::DrawGuide(int, int)
0702b4a0 00000224 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0702b6c4 00000248 T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0702b90c 0000023c T CTRPluginFramework::Icon::DrawMore(int, int)
0702bb48 00000248 T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0702bd90 0000023c T CTRPluginFramework::Icon::DrawRAM(int, int)
0702bfcc 0000023c T CTRPluginFramework::Icon::DrawRestart(int, int)
0702c208 0000023c T CTRPluginFramework::Icon::DrawRocket(int, int)
0702c444 0000023c T CTRPluginFramework::Icon::DrawSave(int, int)
0702c680 0000023c T CTRPluginFramework::Icon::DrawSearch(int, int)
0702c8bc 0000023c T CTRPluginFramework::Icon::DrawSettings(int, int)
0702caf8 0000023c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0702cd34 0000023c T CTRPluginFramework::Icon::DrawTools(int, int)
0702cf70 00000248 T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0702d1b8 0000023c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0702d3f4 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
0702d410 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
0702d448 00000028 T CTRPluginFramework::Window::~Window()
0702d448 00000028 T CTRPluginFramework::Window::~Window()
0702d470 00000064 T CTRPluginFramework::Window::Draw() const
0702d4d4 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0702d5b0 00000018 T CTRPluginFramework::Window::DrawButton() const
0702d5c8 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0702d5e0 00000018 T CTRPluginFramework::Window::MustClose() const
0702d5f8 00000028 T CTRPluginFramework::Window::Close() const
0702d620 00000004 T CTRPluginFramework::Window::GetRect() const
0702d624 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
0702d658 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0702d738 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
0702d758 00000008 W CTRPluginFramework::Drawable::operator()()
0702d760 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0702d760 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0702d774 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
0702d774 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
0702d794 0000002c T CTRPluginFramework::UIContainer::Draw()
0702d7c0 0000003c T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
0702d7fc 00000110 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0702d90c 0000003c T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
0702d948 0000010c T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0702d948 0000010c T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0702da54 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
0702da5c 00000038 T CTRPluginFramework::TouchKeyString::CanUse()
0702da94 0000010c T CTRPluginFramework::TouchKeyString::Draw()
0702dba0 0000012c T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
0702dccc 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
0702dce4 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
0702dcf8 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
0702dd10 00000078 T CTRPluginFramework::TouchKeyString::operator()()
0702dd88 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
0702dd90 000000f0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
0702de80 00000054 T CTRPluginFramework::TouchKey::~TouchKey()
0702de80 00000054 T CTRPluginFramework::TouchKey::~TouchKey()
0702ded4 0000005c T CTRPluginFramework::TouchKey::~TouchKey()
0702df30 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0702df30 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0702dfbc 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0702dfbc 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0702e074 00000090 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0702e074 00000090 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0702e104 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
0702e10c 00000080 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
0702e18c 00000074 T CTRPluginFramework::TouchKey::Draw()
0702e200 000000b8 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e2b8 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0702e2c0 00000110 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
0702e3d0 000001f8 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0702e3d0 000001f8 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0702e5c8 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702e5cc 00000304 T CTRPluginFramework::TextBox::Draw()
0702e8d0 00000040 W CTRPluginFramework::TextBox::~TextBox()
0702e8d0 00000040 W CTRPluginFramework::TextBox::~TextBox()
0702e910 00000048 W CTRPluginFramework::TextBox::~TextBox()
0702e958 00000098 T CTRPluginFramework::TextBox::TextBox()
0702e958 00000098 T CTRPluginFramework::TextBox::TextBox()
0702e9f0 0000000c T CTRPluginFramework::TextBox::Open() const
0702e9fc 0000000c T CTRPluginFramework::TextBox::Close() const
0702ea08 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0702ea10 00000258 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0702ec68 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0702ec74 000000a0 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0702ed14 000000d8 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0702edec 00000110 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
0702eefc 00000110 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char*&&)
0702f00c 00000288 T CTRPluginFramework::TextBox::_GetTextInfos()
0702f294 000001e4 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702f294 000001e4 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702f478 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f560 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0702f690 00000170 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0702f800 000001f0 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0702f9f0 00000244 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0702fc34 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0702fc98 000002e8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
0702ff80 00000548 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
070304c8 00000454 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
0703091c 0000006c T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07030988 00000068 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
070309f0 00000088 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07030a78 0000019c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07030c14 000001b0 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07030dc4 000000bc T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07030e80 00000220 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
070310a0 00000044 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
070310e4 000001d0 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
070312b4 00000018 t __tcf_0
070312cc 000001d8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
070314a4 00000190 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07031634 00000098 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
070316cc 000000b4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07031780 00000340 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07031ac0 000001d0 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
07031c90 0000010c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07031d9c 0000003c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07031dd8 000007a0 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07032578 000001f4 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0703276c 00000050 T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
070327bc 00000314 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07032ad0 000000cc T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07032b9c 00000180 T CTRPluginFramework::Renderer::EndFrame(bool)
07032d1c 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
07032d40 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07032d60 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07032d8c 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07032dc0 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07032de8 0000002c T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07032e14 00000024 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07032e38 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07032e68 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07032eb0 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07032ef4 00000170 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07033064 00000148 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
070331ac 00000150 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
070332fc 00000164 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07033460 0000016c T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
070335cc 00000124 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070336f0 00000030 T CTRPluginFramework::PrivColor::UseClamp(bool)
07033720 00000078 T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07033798 00000044 t __tls_init
07033798 00000044 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
070337e0 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask)
07033834 0000000c T CTRPluginFramework::OSDImpl::Lock()
07033840 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0703385c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07033868 000000ec T CTRPluginFramework::OSDImpl::PauseFrame()
07033958 000001dc T CTRPluginFramework::OSDImpl::WaitFramePaused()
07033b34 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07033be0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
07033c10 000000b4 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
07033cc4 000000a4 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07033d68 00000048 t CTRPluginFramework::GetBuffer(unsigned long)
07033db0 000000cc t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07033e7c 00000080 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
07033efc 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07033efc 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07033f84 00000104 T CTRPluginFramework::OSDImpl::UpdateScreens()
07034088 00000154 T CTRPluginFramework::InstallOSD()
070341dc 00000058 T CTRPluginFramework::OSDImpl::_Initialize()
07034234 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07034328 0000036c T CTRPluginFramework::OSDImpl::Update()
07034694 000000e8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0703477c 00000cbc T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int)
07035438 00000098 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
070354d0 000000a4 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07035574 00000098 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0703560c 00000030 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703560c 00000030 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703563c 00000038 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07035674 00000080 T CTRPluginFramework::NumericTextBox::Draw()
070356f4 00000134 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07035828 0000006c T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07035828 0000006c T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07035894 000000fc T CTRPluginFramework::NumericTextBox::operator()()
07035990 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070359a0 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070359b0 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070359b8 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070359c4 00000088 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07035a4c 00000118 t CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0] [clone .isra.0]
07035b64 000002bc T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07035b64 000002bc T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07035e20 00000210 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07035e20 00000210 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07036030 000002e0 T CTRPluginFramework::MessageBoxImpl::_Draw()
07036310 00000208 T CTRPluginFramework::MessageBoxImpl::operator()()
07036518 00000010 T CTRPluginFramework::Glyph::Width() const
07036528 0000050c T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07036a38 00000428 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07036e60 000000ac T CTRPluginFramework::Font::Initialize()
07036f0c 0000026c W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07037178 00000140 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
070372b8 00000090 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07037348 00000028 T CTRPluginFramework::Font::GetGlyph(char)
07037370 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
070373b4 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
0703743c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703743c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07037440 00000014 T CTRPluginFramework::FloatingButton::Draw()
07037454 00000014 T CTRPluginFramework::FloatingButton::operator()()
07037468 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703747c 00000160 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
070375dc 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070375dc 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703761c 00000094 T CTRPluginFramework::ComboBox::Draw()
070376b0 0000006c W CTRPluginFramework::ComboBox::~ComboBox()
0703771c 000000ac T CTRPluginFramework::ComboBox::operator()()
070377c8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07037878 00000064 W CTRPluginFramework::ComboBox::~ComboBox()
07037878 00000064 W CTRPluginFramework::ComboBox::~ComboBox()
070378dc 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070378dc 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0703792c 00000050 T CTRPluginFramework::ComboBox::Clear()
0703797c 00000060 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070379dc 00000098 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07037a74 00000030 T CTRPluginFramework::Button::~Button()
07037a74 00000030 T CTRPluginFramework::Button::~Button()
07037aa4 00000038 T CTRPluginFramework::Button::~Button()
07037adc 00000164 T CTRPluginFramework::Button::Draw()
07037c40 00000070 T CTRPluginFramework::Button::operator()()
07037cb0 00000194 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07037e44 000001d0 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07037e44 000001d0 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038014 00000024 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038014 00000024 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038038 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038038 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070380cc 00000018 T CTRPluginFramework::Button::Enable(bool)
070380e4 00000010 T CTRPluginFramework::Button::Enable()
070380f4 00000010 T CTRPluginFramework::Button::Disable()
07038104 00000010 T CTRPluginFramework::Button::Lock()
07038114 00000010 T CTRPluginFramework::Button::Execute()
07038124 00000018 T CTRPluginFramework::Button::SetState(bool)
0703813c 00000010 T CTRPluginFramework::Button::GetState() const
0703814c 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07038154 00000104 t CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&) [clone .part.0]
07038258 000000ac T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07038258 000000ac T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07038304 00000044 T CTRPluginFramework::BMPImage::~BMPImage()
07038304 00000044 T CTRPluginFramework::BMPImage::~BMPImage()
07038348 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07038350 00000008 T CTRPluginFramework::BMPImage::Width() const
07038358 00000008 T CTRPluginFramework::BMPImage::Height() const
07038360 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07038368 00000010 T CTRPluginFramework::BMPImage::data() const
07038378 00000034 T CTRPluginFramework::BMPImage::Unload()
070383ac 00000298 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07038644 0000022c T CTRPluginFramework::BMPImage::OptimiseForRendering()
07038870 000000cc T CTRPluginFramework::BMPImage::Draw(int, int)
0703893c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07038944 00000104 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07038a48 000000a4 T CTRPluginFramework::BMPImage::_CreateBitmap()
07038aec 00000064 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07038aec 00000064 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07038b50 00000140 T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07038c90 00000728 T CTRPluginFramework::BMPImage::_LoadBitmap()
070393b8 00000160 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070393b8 00000160 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039518 000008e0 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07039df8 0000014c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07039f44 000000b4 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07039ff8 000000d4 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0703a0cc 0000090c T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703a9d8 00000420 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0703adf8 00000184 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0703af7c 000001bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0703b138 000001bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0703b2f4 000001a4 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0703b498 000000ec T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0703b584 00000220 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0703b7a4 000002d8 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703ba7c 000000c0 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0703bb3c 000000b8 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0703bbf4 00000160 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0703bd54 00000140 T ARM_Disasm::Decode01(unsigned long)
0703be94 00000078 T ARM_Disasm::Decode11(unsigned long)
0703bf0c 00000058 T ARM_Disasm::DecodeMUL(unsigned long)
0703bf64 00000118 T ARM_Disasm::DecodeALU(unsigned long)
0703c07c 00000114 T ARM_Disasm::Decode00(unsigned long)
0703c190 00000054 T ARM_Disasm::Decode(unsigned long)
0703c1e4 00000110 W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
0703c2f4 0000056c T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0703c860 000003f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0703cc50 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703cc50 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703ccc8 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703cce4 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0703cd34 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0703cde4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703cde4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703ce30 000002a0 T CTRPluginFramework::MenuEntryActionReplay::Update()
0703d0d0 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0703d25c 00000144 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0703d3a0 00002684 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0703fa24 000000a0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0703fac4 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0703fae4 00000150 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703fc34 0000042c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07040060 00000018 t __tcf_0
07040078 00000148 t std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::__find_if<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}> >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>, std::random_access_iterator_tag) [clone .constprop.0]
070401c0 00000118 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
070402d8 0000001c T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070402f4 000000d4 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070403c8 000007ac T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07040b74 00000138 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reallocate_map(unsigned int, bool)
07040cac 000000e4 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::emplace_back<CTRPluginFramework::MenuFolderImpl*>(CTRPluginFramework::MenuFolderImpl*&&)
07040d90 00000eb0 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07041c40 000000c4 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07041d04 00000180 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07041e84 00000124 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07041fa8 00000060 t __tcf_0
07042008 00000084 t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0704208c 000030bc t CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)
07045148 00000140 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07045148 00000140 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07045288 00001894 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07046b1c 00000378 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07046b1c 00000378 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07046e94 00000308 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0704719c 00000090 T CTRPluginFramework::ARCodeEditor::_Update()
0704722c 00000118 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07047344 0000027c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
070475c0 00000080 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07047640 000003a0 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
070479e0 0000075c T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0704813c 00000d5c T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07048e98 0000063c t CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&) [clone .part.0]
070494d4 000001b4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07049688 0000009c T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07049724 00000238 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07049724 00000238 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0704995c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07049998 00000150 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07049ae8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07049ae8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07049b0c 00000030 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07049b3c 0000015c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07049b3c 0000015c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07049c98 00000038 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07049c98 00000038 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07049cd0 000000c0 T CTRPluginFramework::ARCodeContext::Update()
07049d90 000000c0 T CTRPluginFramework::ARCodeContext::Clear()
07049e50 000000b8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07049f08 00000018 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
07049f20 000000c4 t CTRPluginFramework::Preferences::LoadBackgrounds() [clone .part.0]
07049fe4 0000011c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0704a100 00000500 t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0704a600 000002c4 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0704a8c4 000000c4 T CTRPluginFramework::Preferences::LoadSettings()
0704a988 00000168 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0704aaf0 00000164 T CTRPluginFramework::Preferences::LoadSavedFavorites()
0704ac54 00000094 T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0704ace8 000001d4 T CTRPluginFramework::Preferences::WriteSettings()
0704aebc 00000064 T CTRPluginFramework::Preferences::ApplyBacklight()
0704af20 00000018 T CTRPluginFramework::Preferences::Initialize()
0704af38 000000f8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0704b030 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0704b080 00000018 t __tcf_0
0704b098 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0704b098 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0704b0c0 00000058 T CTRPluginFramework::LineWriter::~LineWriter()
0704b0c0 00000058 T CTRPluginFramework::LineWriter::~LineWriter()
0704b118 00000078 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0704b190 00000048 T CTRPluginFramework::LineWriter::Flush()
0704b1d8 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704b244 00000060 T CTRPluginFramework::LineWriter::Close()
0704b2a4 00000014 T CTRPluginFramework::Touch::IsDown()
0704b2b8 0000002c T CTRPluginFramework::Touch::GetPosition()
0704b2e4 00000020 T CTRPluginFramework::Time::AsSeconds() const
0704b304 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
0704b32c 00000170 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
0704b49c 0000003c T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0704b49c 0000003c T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0704b4d8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0704b4d8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0704b4f8 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
0704b54c 0000004c T CTRPluginFramework::ThreadEx::Join(bool)
0704b598 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
0704b5a0 00000124 W std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_unique<std::pair<unsigned long, ThreadVars*> >(std::pair<unsigned long, ThreadVars*>&&)
0704b6c4 000001d8 T __ctrpf_getThreadVars
0704b89c 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
0704b8d4 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
0704b90c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0704b90c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0704b910 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0704b914 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
0704b944 00000014 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0704b958 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
0704b95c 000000e4 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0704b95c 000000e4 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0704ba40 00000048 T CTRPluginFramework::Task::Start() const
0704ba88 0000004c T CTRPluginFramework::Task::Start(void*) const
0704bad4 00000064 T CTRPluginFramework::Task::Wait() const
0704bb38 00000010 T CTRPluginFramework::System::IsNew3DS()
0704bb48 00000010 T CTRPluginFramework::System::Reboot()
0704bb58 00000074 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0704bbcc 0000000c T CTRPluginFramework::HookContext::GetCurrent()
0704bbd8 00000030 T CTRPluginFramework::HookContext::GetCallCode()
0704bc08 00000044 T CTRPluginFramework::Hook::Hook()
0704bc08 00000044 T CTRPluginFramework::Hook::Hook()
0704bc4c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0704bc4c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0704bc74 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0704bc74 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0704bc88 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
0704bcec 00000054 T CTRPluginFramework::Hook::~Hook()
0704bcec 00000054 T CTRPluginFramework::Hook::~Hook()
0704bd40 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
0704bd5c 0000002c T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
0704bd88 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
0704bd98 00000138 T CTRPluginFramework::Hook::Enable()
0704bed0 0000002c T CTRPluginFramework::Hook::Disable()
0704befc 00000008 T CTRPluginFramework::Hook::GetContext() const
0704bf04 0000000c T CTRPluginFramework::FwkSettings::Get()
0704bf10 000000c4 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0704bfd4 00000020 T CTRPluginFramework::Controller::GetKeysDown()
0704bff4 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0704c010 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0704c02c 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0704c048 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0704c064 0000003c T CTRPluginFramework::Controller::Update()
0704c0a0 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0704c0a4 0000000c T CTRPluginFramework::Sound::Sound()
0704c0a4 0000000c T CTRPluginFramework::Sound::Sound()
0704c0b0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0704c0b0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0704c0c4 0000003c T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704c0c4 0000003c T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704c100 000000c0 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
0704c1c0 00000080 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
0704c240 0000005c T CTRPluginFramework::Sound::~Sound()
0704c240 0000005c T CTRPluginFramework::Sound::~Sound()
0704c29c 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
0704c2b4 00000020 T CTRPluginFramework::Sound::Play()
0704c2d4 00000110 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
0704c3e4 00000090 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0704c474 00000014 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0704c474 00000014 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0704c488 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0704c488 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0704c4a4 00000394 t cwav_initialize
0704c838 000000f4 t cwav_stopImpl.part.0
0704c92c 00000004 T cwavUseEnvironment
0704c930 00000034 T cwavSetVAToPACallback
0704c964 00000050 T cwavLoad
0704c9b4 000004a4 T cwavPlay
0704ce58 00000064 T cwavStop
0704cebc 00000170 T cwavFree
0704d02c T __aeabi_read_tp
0704d038 0000003c T fontEnsureMappedExtension
0704d074 00000080 T MemPool::CoalesceRight(MemBlock*)
0704d0f4 00000174 T MemPool::Allocate(MemChunk&, unsigned long, int)
0704d268 000000fc T MemPool::Deallocate(MemChunk const&)
0704d364 00000030 T MemPool::GetFreeSpace()
0704d394 00000120 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704d394 00000120 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704d4b4 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
0704d4bc 0000001c T CTRPluginFramework::SoundImpl::Play(int, int)
0704d4d8 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0704d4d8 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0704d500 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704d790 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704da38 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704dcc8 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0704dcfc 00000348 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704e044 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0704e058 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0704e06c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0704e080 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0704e098 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0704e0b0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0704e0c8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0704e0e0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0704e0f8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0704e110 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0704e128 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0704e140 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0704e158 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0704e15c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0704e160 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0704e188 00000094 t __tcf_0
0704e21c 00000060 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0704e27c 00000210 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0704e48c 000000e0 t CTRPluginFramework::MenuHotkeyModifier()
0704e56c 00000230 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0704e79c 000000c4 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0704e860 00000250 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704eab0 00000070 t CTRPluginFramework::Reboot()
0704eb20 00000074 t CTRPluginFramework::Shutdown()
0704eb94 00000294 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0704ee28 000018c4 t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
070506ec 0000015c T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07050848 0000141c T CTRPluginFramework::PluginMenuTools::InitMenu()
07051c64 00000308 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07051c64 00000308 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07051f6c 0000010c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07052078 00000268 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070522e0 00000440 t CTRPluginFramework::UpdateScreenshotText()
07052720 00000158 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07052878 000001ac T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07052a24 00000b7c t CTRPluginFramework::ScreenshotMenuCallback()
070535a0 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
070535c0 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0705361c 00000044 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07053660 00000184 t CTRPluginFramework::ClearSearchFolder()
070537e4 00000080 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07053864 0000011c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07053980 00000098 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07053a18 00000348 T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07053d60 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07053d60 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070543a0 000003ac T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0705474c 000000d4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07054820 00000744 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07054f64 00000120 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07055084 00000354 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
070553d8 000000ec T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
070554c4 00000070 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07055534 000003a8 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070558dc 00000450 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07055d2c 000001c8 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07055d2c 000001c8 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07055ef4 00001180 T CTRPluginFramework::SearchMenu::Draw()
07057074 000005b0 T CTRPluginFramework::SearchMenu::Update()
07057624 0000014c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07057770 000000cc T CTRPluginFramework::SearchMenu::_NewCheat()
0705783c 000001c4 T CTRPluginFramework::SearchMenu::_Edit()
07057a00 00000464 T CTRPluginFramework::SearchMenu::_Export()
07057e64 0000031c T CTRPluginFramework::SearchMenu::_ExportAll()
07058180 000001bc T CTRPluginFramework::SearchMenu::_ShowGame()
07058340 000005f8 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07058938 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07058958 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07058958 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07058978 00000028 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
070589a0 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
070589f8 00000080 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
070589f8 00000080 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07058a78 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07058a78 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07058ae0 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07058ae0 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07058b48 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07058b4c 00000048 T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07058b4c 00000048 T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07058b94 0000047c T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07059010 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
070590c0 000001a8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07059268 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07059290 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07059314 0000012c W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07059440 00000470 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
070598b0 000005a0 T CTRPluginFramework::GatewayRAMDumper::operator()()
07059e50 00000004 T cwav_defaultVAToPA
07059e54 00000004 T cwavEnvUseEnvironment
07059e58 00000008 T cwavEnvGetEnvironment
07059e60 00000004 T cwavEnvInitialize
07059e64 00000004 T cwavEnvFinalize
07059e68 00000014 T cwavEnvCompatibleEncoding
07059e7c 00000008 T cwavEnvGetChannelAmount
07059e84 00000018 T cwavEnvIsChannelAvailable
07059e9c 000000f8 T cwavEnvPlay
07059f94 00000004 T cwavEnvChannelIsPlaying
07059f98 00000004 T cwavEnvStop
07059f9c 00000044 T CTRPluginFramework::Search::UpdateProgress()
07059fe0 0000004c T CTRPluginFramework::Search::Cancel()
0705a02c 000001ec T CTRPluginFramework::Search::CheckNextRegion()
0705a218 00000008 T CTRPluginFramework::Search::GetHeader() const
0705a220 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0705a268 000002d4 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0705a53c 0000000c T CTRPluginFramework::Search::GetType() const
0705a548 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0705a560 0000007c T CTRPluginFramework::Search::WriteHeader()
0705a5dc 0000051c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0705a5dc 0000051c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0705aaf8 00000120 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0705ac18 000000a0 T CTRPluginFramework::Search::CreateIndexTable()
0705acb8 00000200 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705acb8 00000200 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705aeb8 00000230 T CTRPluginFramework::Search::ExecuteSearch()
0705b0e8 000000cc T CTRPluginFramework::Search32::FirstSearchUnknown()
0705b1b4 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
0705b278 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0705b328 00000098 T CTRPluginFramework::Search32::~Search32()
0705b328 00000098 T CTRPluginFramework::Search32::~Search32()
0705b3c0 0000001c T CTRPluginFramework::Search32::~Search32()
0705b3e0 00000278 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0705b3e0 00000278 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0705b658 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705b658 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705b678 00000158 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0705b7d0 000001e8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0705b9b8 00000144 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0705bafc 000001c0 T CTRPluginFramework::Search32::SecondSearchSpecified()
0705bcbc 00000124 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0705bde0 000001a8 T CTRPluginFramework::Search32::SecondSearchUnknown()
0705bf88 00000188 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0705c110 000001ec T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0705c2fc 000001ec T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0705c4e8 00000098 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0705c580 000005f4 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0705cb74 00000980 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705d4f4 00000958 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705de4c 00000940 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705e78c 00000cc8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705f454 000004a8 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705f8fc 000004ac T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705fda8 000004a8 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07060250 00000670 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070608c0 00000d8c T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0706164c 000007ac T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07061df8 00000468 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07062260 00000724 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07062984 00000930 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070632b4 00000958 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07063c0c 00000960 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0706456c 00000e60 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070653cc 0000000c T __sync_init
070653d8 00000018 T __sync_fini
070653f0 0000002c T syncArbitrateAddressWithTimeout
0706541c 0000001c T LightLock_Init
07065438 00000094 T LightLock_Lock
070654cc 00000044 T LightLock_TryLock
07065510 00000040 T LightLock_Unlock
07065550 00000024 T RecursiveLock_Init
07065574 00000030 T RecursiveLock_Lock
070655a4 00000078 T RecursiveLock_TryLock
0706561c 00000054 T RecursiveLock_Unlock
07065670 00000040 T LightEvent_Init
070656b0 000000a4 T LightEvent_Clear
07065754 00000048 T LightEvent_Pulse
0706579c 000000c8 T LightEvent_Signal
07065864 000000b0 T LightEvent_Wait
07065914 00000014 T LightSemaphore_Init
07065928 00000094 T LightSemaphore_Acquire
070659bc 00000064 T LightSemaphore_Release
07065a20 00000084 W envGetHandle
07065aa4 00000050 W envDestroyHandles
07065af4 00000074 T osConvertVirtToPhys
07065b68 00000054 T osGetTimeRef
07065bbc 000000e4 T osGetTime
07065ca0 00000074 T __libctru_gtod
07065d14 0000009c T fontEnsureMapped
07065db0 000000fc T fontGlyphIndexFromCodePoint
07065eac 0000006c T fontGetCharWidthInfo
07065f18 00000124 T srvInit
0706603c 00000058 T srvExit
07066094 00000080 T srvGetServiceHandleDirect
07066114 00000048 T srvGetServiceHandle
0706615c 00000038 T srvPublishToSubscriber
07066194 00000094 t mappableFindAddressWithin
07066228 00000028 T mappableInit
07066250 00000080 T mappableAlloc
070662d0 00000004 T mappableFree
070662d4 000000a4 T cfguInit
07066378 0000003c T cfguExit
070663b4 00000054 T CFGU_GetSystemLanguage
07066408 000000f0 T gspExit
070664f8 0000008c T acInit
07066584 0000003c T acExit
070665c0 000000a4 T amInit
07066664 0000003c T amExit
070666a0 0000015c T aptSendCommand
070667fc 00000030 T aptHook
0706682c 00000030 T aptUnhook
0706685c 00000028 T APT_PrepareToCloseApplication
07066884 00000048 T APT_CloseApplication
070668cc 0000007c T APT_CheckNew3DS
07066948 00000048 T APT_GetSharedFont
07066990 00000024 W hidShouldUseIrrst
070669b4 0000018c T hidInit
07066b40 000000e8 T hidExit
07066c28 00000294 T hidScanInput
07066ebc 00000010 T hidKeysHeld
07066ecc 00000010 T hidKeysDown
07066edc 00000010 T hidKeysUp
07066eec 00000018 T hidTouchRead
07066f04 0000000c T srvPmGetSessionHandle
07066f10 000000c8 T fsInit
07066fd8 0000003c T fsExit
07067014 000000cc T FSUSER_OpenFile
070670e0 000000bc T FSUSER_DeleteFile
0706719c 000000f8 T FSUSER_RenameFile
07067294 000000bc T FSUSER_DeleteDirectoryRecursively
07067350 000000d4 T FSUSER_CreateFile
07067424 000000c4 T FSUSER_CreateDirectory
070674e8 000000f8 T FSUSER_RenameDirectory
070675e0 000000b4 T FSUSER_OpenDirectory
07067694 00000094 T FSUSER_OpenArchive
07067728 00000058 T FSFILE_Read
07067780 00000060 T FSFILE_Write
070677e0 00000038 T FSFILE_GetSize
07067818 00000028 T FSFILE_SetSize
07067840 0000003c T FSFILE_Close
0706787c 00000024 T FSFILE_Flush
070678a0 00000028 T FSFILE_SetPriority
070678c8 00000050 T FSDIR_Read
07067918 0000003c T FSDIR_Close
07067954 00000010 T rbtree_init
07067964 000001a0 t do_insert
07067b04 00000008 T rbtree_insert
07067b0c 00000090 T rbtree_rotate
07067b9c 00000338 T rbtree_remove
07067ed4 00000074 T rbtree_find
07067f48 00000060 T encode_utf16
07067fa8 000000fc T encode_utf8
070680a4 000000e8 T utf16_to_utf8
0706818c 00000064 T decode_utf16
070681f0 0000013c T decode_utf8
0706832c 000000c0 T utf8_to_utf16
070683ec T svcQueryMemory
0706841c T svcExitProcess
07068424 T svcCreateThread
07068444 T svcExitThread
0706844c T svcSleepThread
07068454 T svcSetThreadPriority
0706845c T svcReleaseMutex
07068464 T svcCreateEvent
07068478 T svcSignalEvent
07068480 T svcClearEvent
07068488 T svcMapMemoryBlock
07068490 T svcUnmapMemoryBlock
07068498 T svcCreateAddressArbiter
070684ac T svcArbitrateAddress
070684c4 T svcArbitrateAddressNoTimeout
070684cc T svcCloseHandle
070684d4 T svcWaitSynchronization
070684dc T svcWaitSynchronizationN
07068504 T svcDuplicateHandle
07068518 T svcGetSystemTick
07068520 T svcGetSystemInfo
07068538 T svcGetProcessInfo
07068550 T svcConnectToPort
07068564 T svcSendSyncRequest
0706856c T svcOpenProcess
07068580 T svcBreak
07068588 T svcInvalidateProcessDataCache
07068590 T svcFlushProcessDataCache
07068598 T svcKernelSetState
070685a0 T svcQueryProcessMemory
070685c4 00000160 T irrstInit
07068724 000000cc T irrstExit
070687f0 000000b0 T irrstScanInput
070688a0 00000024 T irrstKeysHeld
070688c4 00000050 T rbtree_node_next
07068914 00000004 T operator delete(void*)
07068918 00000004 T operator delete(void*, std::nothrow_t const&)
0706891c 00000004 T operator delete[](void*)
07068920 00000060 T __cxa_guard_acquire
07068980 0000000c T __cxa_guard_release
0706898c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0706898c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070689ac 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
070689d8 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
070689d8 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
070689e8 00000014 T std::get_new_handler()
070689fc 0000005c T operator new(unsigned int)
07068a58 0000001c T operator new(unsigned int, std::nothrow_t const&)
07068a74 00000004 T operator new[](unsigned int)
07068a78 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07068a78 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07068a98 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07068ac4 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07068b30 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07068c0c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07068c50 00000004 T std::type_info::~type_info()
07068c50 00000004 T std::type_info::~type_info()
07068c54 00000008 T std::type_info::__is_pointer_p() const
07068c54 00000008 T std::type_info::__is_function_p() const
07068c5c 0000004c T std::type_info::operator==(std::type_info const&) const
07068ca8 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07068cc0 00000014 T std::__detail::_List_node_base::_M_unhook()
07068cd4 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
07068d44 00000288 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
07068fcc 0000002c T std::__throw_bad_alloc()
07068ff8 0000002c T std::__throw_bad_array_new_length()
07069024 00000048 T std::__throw_logic_error(char const*)
0706906c 00000048 T std::__throw_invalid_argument(char const*)
070690b4 00000048 T std::__throw_length_error(char const*)
070690fc 00000048 T std::__throw_out_of_range(char const*)
07069144 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
070691c0 000000d0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
07069290 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
07069370 0000000c T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0706937c 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
070693ec 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0706946c 0000012c T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07069598 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
070695f0 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07069604 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
07069688 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
070696ac 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
070696d0 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0706978c 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0706988c 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07069908 0000009c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
070699a4 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07069ac8 0000028c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07069d54 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07069de4 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07069e88 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07069f00 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
07069f54 0000000c T std::bad_alloc::what() const
07069f60 00000020 T std::bad_alloc::~bad_alloc()
07069f60 00000020 T std::bad_alloc::~bad_alloc()
07069f80 0000002c T std::bad_alloc::~bad_alloc()
07069fac 0000000c T std::bad_array_new_length::what() const
07069fb8 00000020 T std::bad_array_new_length::~bad_array_new_length()
07069fb8 00000020 T std::bad_array_new_length::~bad_array_new_length()
07069fd8 0000002c T std::bad_array_new_length::~bad_array_new_length()
0706a004 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0706a060 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0706a074 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0706a074 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0706a094 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0706a0c0 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0706a128 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0706a154 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0706a198 00000004 T operator delete(void*, unsigned int)
0706a19c 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0706a26c 00000098 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0706a304 00000044 T __cxa_allocate_exception
0706a348 00000030 T __cxa_free_exception
0706a378 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0706a3b8 T __cxa_end_cleanup
0706a3c8 00000134 T __cxa_type_match
0706a4fc 000000b4 T __cxa_begin_cleanup
0706a5b0 000000b4 T __gnu_end_cleanup
0706a664 000000cc T __cxa_begin_catch
0706a730 000000e0 T __cxa_end_catch
0706a810 00000004 T std::exception::~exception()
0706a810 00000004 T std::exception::~exception()
0706a814 00000004 T std::bad_exception::~bad_exception()
0706a814 00000004 T std::bad_exception::~bad_exception()
0706a818 0000000c T transaction clone for std::exception::what() const
0706a818 0000000c T std::exception::what() const
0706a824 0000000c T transaction clone for std::bad_exception::what() const
0706a824 0000000c T std::bad_exception::what() const
0706a830 00000018 T std::bad_exception::~bad_exception()
0706a848 0000000c T __cxa_get_globals_fast
0706a854 0000000c T __cxa_get_globals
0706a860 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0706a9cc 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0706aa2c 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0706ab04 000006f8 T __gxx_personality_v0
0706b1fc 00000014 T __cxxabiv1::__terminate(void (*)())
0706b210 00000018 T std::terminate()
0706b228 0000000c T __cxxabiv1::__unexpected(void (*)())
0706b234 00000018 T std::unexpected()
0706b24c 00000014 T std::get_terminate()
0706b260 00000014 T std::get_unexpected()
0706b274 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0706b2e4 00000070 T __cxa_init_primary_exception
0706b354 00000058 T __cxa_throw
0706b3ac 000000b0 T __cxa_rethrow
0706b45c 00000008 T std::logic_error::what() const
0706b45c 00000008 T std::runtime_error::what() const
0706b464 00000064 T std::logic_error::~logic_error()
0706b464 00000064 T std::logic_error::~logic_error()
0706b4c8 00000064 T std::length_error::~length_error()
0706b4c8 00000064 T std::length_error::~length_error()
0706b52c 00000064 T std::out_of_range::~out_of_range()
0706b52c 00000064 T std::out_of_range::~out_of_range()
0706b590 00000064 T std::invalid_argument::~invalid_argument()
0706b590 00000064 T std::invalid_argument::~invalid_argument()
0706b5f4 0000006c T std::logic_error::~logic_error()
0706b660 0000006c T std::out_of_range::~out_of_range()
0706b6cc 0000006c T std::invalid_argument::~invalid_argument()
0706b738 0000006c T std::length_error::~length_error()
0706b7a4 000000d4 T std::logic_error::logic_error(char const*)
0706b7a4 000000d4 T std::logic_error::logic_error(char const*)
0706b878 00000020 T std::invalid_argument::invalid_argument(char const*)
0706b878 00000020 T std::invalid_argument::invalid_argument(char const*)
0706b898 00000020 T std::length_error::length_error(char const*)
0706b898 00000020 T std::length_error::length_error(char const*)
0706b8b8 00000020 T std::out_of_range::out_of_range(char const*)
0706b8b8 00000020 T std::out_of_range::out_of_range(char const*)
0706b8d8 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0706b960 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0706b964 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0706b9d4 0000002c T __cxa_call_terminate
0706ba00 00000154 T __cxa_call_unexpected
0706bb58 0000028c T log2
0706bde4 00000024 t with_errno
0706be08 00000050 T __math_divzero
0706be58 0000001c T __math_invalid
0706be78 00000164 T ceil
0706bfdc 000000b8 T ceilf
0706c098 00000174 T floor
0706c20c 00000070 T roundf
0706c27c 00000044 T __popcountsi2
0706c2c0 00000030 T __aeabi_f2lz
0706c2c0 00000030 T __fixsfdi
0706c2f0 00000040 T __aeabi_f2ulz
0706c2f0 00000040 T __fixunssfdi
0706c330 00000120 T __udivmoddi4
0706c450 00000018 t selfrel_offset31
0706c468 00000090 t search_EIT_table
0706c4f8 00000040 t __gnu_unwind_get_pr_addr
0706c538 00000108 t get_eit_entry
0706c640 00000088 t restore_non_core_regs
0706c6c8 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0706c6dc 00000004 t _Unwind_DebugHook
0706c6e0 00000064 t unwind_phase2
0706c744 00000134 t unwind_phase2_forced
0706c878 000000a4 T __gnu_Unwind_RaiseException
0706c91c 00000028 T __gnu_Unwind_ForcedUnwind
0706c944 00000074 T __gnu_Unwind_Resume
0706c9b8 00000020 T __gnu_Unwind_Resume_or_Rethrow
0706c9d8 00000004 T _Unwind_Complete
0706c9dc 00000018 T _Unwind_DeleteException
0706c9f4 0000005c T _Unwind_VRS_Get
0706ca50 0000002c t _Unwind_GetGR
0706ca7c 0000005c T _Unwind_VRS_Set
0706cad8 0000002c t _Unwind_SetGR
0706cb04 000000c0 T __gnu_Unwind_Backtrace
0706cbc4 0000041c t __gnu_unwind_pr_common
0706cfe0 00000008 T __aeabi_unwind_cpp_pr0
0706cfe8 00000008 W __aeabi_unwind_cpp_pr1
0706cff0 00000008 W __aeabi_unwind_cpp_pr2
0706cff8 000003f4 T _Unwind_VRS_Pop
0706d3ec 00000064 t next_unwind_byte
0706d450 0000002c t _Unwind_GetGR.constprop.0
0706d47c 00000004 t unwind_UCB_from_context
0706d480 0000040c T __gnu_unwind_execute
0706d88c 00000048 T __gnu_unwind_frame
0706d8d4 00000010 T _Unwind_GetRegionStart
0706d8e4 0000001c T _Unwind_GetLanguageSpecificData
0706d900 00000008 T _Unwind_GetDataRelBase
0706d908 00000008 T _Unwind_GetTextRelBase
0706d910 00000014 T atexit
0706d924 00000028 T calloc
0706d94c 000000bc T _calloc_r
0706da08 00000010 T ctime
0706da18 0000000c T __errno
0706da24 00000160 T _fclose_r
0706db84 00000258 T __sflush_r
0706dddc 00000094 T _fflush_r
0706de70 0000000c T _cleanup_r
0706de7c 00000184 T __sinit
0706e000 0000000c T __sfp_lock_acquire
0706e00c 0000000c T __sfp_lock_release
0706e018 000000f8 T _malloc_trim_r
0706e110 000002e4 T _free_r
0706e3f4 00000070 T _fwalk_reent
0706e464 0000007c T __libc_init_array
0706e4e0 00000018 T isspace
0706e4f8 00000018 T isxdigit
0706e510 00000020 T localtime
0706e530 0000038c T localtime_r
0706e8bc 00000138 T __smakebuf_r
0706e9f4 00000028 T memalign
0706ea1c 00000150 T _memalign_r
0706eb6c 00000020 T malloc
0706eb8c 00000020 T free
0706ebac 000007e0 T _malloc_r
0706f38c 000000e0 T memchr
0706f46c 000000a8 T memcmp
0706f514 0000011c T memcpy
0706f630 00000154 T memmove
0706f784 00000118 T memset
0706f89c 0000000c T __malloc_lock
0706f8a8 0000000c T __malloc_unlock
0706f8b4 00000028 T realloc
0706f8dc 00000558 T _realloc_r
0706fe34 000000cc T snprintf
0706ff00 00000064 T sprintf
0706ff64 00000044 T __sread
0706ffa8 00000008 T __seofread
0706ffb0 00000068 T __swrite
07070018 00000048 T __sseek
07070060 00000008 T __sclose
07070068 00000128 t iso_year_adjust
07070190 00001094 t __strftime.isra.0
07071224 00000004 T strftime
07071228 0000005c T strlen
07071284 000000dc T strncmp
07071360 000000c0 T strncpy
07071420 00000048 T strnlen
07071468 00001368 T _strtod_l
070727d0 000000c4 T strtof
07072894 000001c4 t _strtoul_l.constprop.0
07072a58 00000004 T _strtoul_r
07072a5c 00000030 T strtoul
07072a8c 00000628 t get_arg
070730b8 000035b8 T _svfprintf_r
07076670 0000003c T time
070766ac 00000248 T __tzcalc_limits
070768f4 0000000c T __tz_lock
07076900 0000000c T __tz_unlock
0707690c 00000010 T _tzset_unlocked
0707691c 00000474 T _tzset_unlocked_r
07076d90 000000a4 T _vsnprintf_r
07076e34 00000038 T vsnprintf
07076e6c 00000054 T _wcrtomb_r
07076ec0 00000028 T _wcsrtombs_r
07076ee8 0000000c T abs
07076ef4 00000020 T asctime
07076f14 00000080 T asctime_r
07076f94 000000b0 T __register_exitproc
07077044 000001ac t quorem
070771f0 000012cc T _dtoa_r
070784bc 000000ec t rshift
070785a8 00000904 T __gethex
07078eac 0000004c T __match
07078ef8 0000029c T __hexnan
07079194 000000c8 T _findenv_r
0707925c 00000018 T _getenv_r
07079274 0000000c T __gettzinfo
07079280 00000250 T gmtime_r
070794d0 0000000c T labs
070794dc 0000000c T _localeconv_r
070794e8 00000010 T __locale_mb_cur_max
070794f8 000002e4 T __utf8_mbtowc
070797dc 00000088 T _Balloc
07079864 0000001c T _Bfree
07079880 000000f4 T __multadd
07079974 00000110 T __s2b
07079a84 00000058 T __hi0bits
07079adc 00000094 T __lo0bits
07079b70 000000a4 T __i2b
07079c14 00000204 T __multiply
07079e18 00000120 T __pow5mult
07079f38 0000013c T __lshift
0707a074 00000058 T __mcmp
0707a0cc 000001cc T __mdiff
0707a298 00000074 T __ulp
0707a30c 000000d0 T __b2d
0707a3dc 00000124 T __d2b
0707a500 00000078 T __ratio
0707a578 00000088 T __copybits
0707a600 0000005c T __any_on
0707a65c 0000000c T nanf
0707a668 000000a8 T frexp
0707a710 00000064 T siprintf
0707a774 00000074 T siscanf
0707a7e8 00000010 T nan
0707a7f8 000000cc T sniprintf
0707a8c4 000000f0 T strcpy
0707a9b4 000001a4 t _strtol_l.part.0
0707ab58 0000003c T _strtol_r
0707ab94 00000628 t get_arg
0707b1bc 00000190 T __ssprint_r
0707b34c 00002274 T _svfiprintf_r
0707d5c0 00000050 t get_arg
0707d610 000000e0 T _sungetc_r
0707d6f0 0000006c T __ssrefill_r
0707d75c 000000c8 T _sfread_r
0707d824 000022a0 T __ssvfiscanf_r
0707fac4 000000a8 T __submore
0707fb6c 00000190 T _wcsnrtombs_l
0707fcfc 0000004c T _wcsnrtombs_r
0707fd48 000000f0 T __utf8_wctomb
0707fe38 00000054 T __assert_func
0707fe8c 0000000c T __env_lock
0707fe98 0000000c T __env_unlock
0707fea4 0000003c T fiprintf
0707fee0 00000008 T iswspace
0707fee8 00000068 T _mbrtowc_r
0707ff50 000000e4 T __sccl
07080034 0000022c t _strtoll_l.constprop.0
07080260 00000004 T _strtoll_r
07080264 00000244 t _strtoull_l.constprop.0
070804a8 00000004 T _strtoull_r
070804ac 00000628 t get_arg
07080ad4 00000030 T __sprint_r
07080b04 0000233c T _vfiprintf_r
07082e40 000000d4 t __sbprintf
07082f14 00000154 T __swsetup_r
07083068 000004c0 T __sfvwrite_r
07083528 0000003c T iswspace_l
07083564 000001d4 t __jp2uc
07083738 0000009c T _jp2uc_l
070837d4 00000084 T category
07083858 00000078 T _fstat_r
070838d0 00000038 T _gettimeofday_r
07083908 00000008 T _isatty_r
07083910 00000084 T _lseek_r
07083994 00000080 T _read_r
07083a14 00000078 T _sbrk_r
07083a8c 00000080 T _write_r
07083b0c 00000008 T __flockfile
07083b14 00000008 T __funlockfile
07083b1c 00000018 T __libc_lock_acquire
07083b34 00000018 T __libc_lock_release
07083b4c 00000018 T __libc_lock_init_recursive
07083b64 00000018 T __libc_lock_acquire_recursive
07083b7c 00000018 T __libc_lock_release_recursive
07083b94 00000018 T __libc_lock_close_recursive
07083bac 0000003c T __get_handle
07083be8 000000f4 T _close_r
07083cdc 00000028 T __getreent
07083d04 00000008 t null_write
07083d0c 00000038 T __aeabi_d2lz
07083d0c 00000038 T __fixdfdi
07083d48 00000040 T __aeabi_d2ulz
07083d48 00000040 T __fixunsdfdi
07083d88 T _fini
07084350 00000004 R CTRPluginFramework::Color::DeepSkyBlue
07084354 00000004 R CTRPluginFramework::Color::ForestGreen
07084358 00000004 R CTRPluginFramework::Color::Red
0708435c 00000004 R CTRPluginFramework::Color::Blue
07084360 00000004 R CTRPluginFramework::Color::Cyan
07084364 00000004 R CTRPluginFramework::Color::Gray
07084368 00000004 R CTRPluginFramework::Color::Black
0708436c 00000004 R CTRPluginFramework::Color::Brown
07084370 00000004 R CTRPluginFramework::Color::Green
07084374 00000004 R CTRPluginFramework::Color::White
07084378 00000004 R CTRPluginFramework::Color::Orange
0708437c 00000004 R CTRPluginFramework::Color::Silver
07084380 00000004 R CTRPluginFramework::Color::Yellow
07084384 00000004 R CTRPluginFramework::Color::DimGrey
07084388 00000004 R CTRPluginFramework::Color::Magenta
0708438c 00000004 R CTRPluginFramework::Color::SkyBlue
07084390 00000004 R CTRPluginFramework::Color::DarkGrey
07084394 00000004 R CTRPluginFramework::Color::BlackGrey
07084398 00000004 R CTRPluginFramework::Color::Gainsboro
0708439c 00000004 R CTRPluginFramework::Color::LimeGreen
0708445c 00000014 r CSWTCH.72
07084610 00000014 r CTRPluginFramework::defaultSoundFiles
07084694 00000030 r CTRPluginFramework::g_byme
070846c4 00000048 r CTRPluginFramework::g_ctrpf
0708479c 00000014 V vtable for CTRPluginFramework::MenuItem
070847b0 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
070847c8 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07084958 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07084960 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07084978 00000038 r CTRPluginFramework::ktable
070849b0 00000038 r CTRPluginFramework::stable
07084b74 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
07084b94 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
07084bb4 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
07084bd4 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
07084c28 0000001c R vtable for CTRPluginFramework::TouchKey
07084c44 0000001c R vtable for CTRPluginFramework::TextBox
07084c60 00000a00 r font
070856ac 00000058 r CTRPluginFramework::g_OSDPattern
07085704 0000001c R vtable for CTRPluginFramework::NumericTextBox
0708572c 0000001c R vtable for CTRPluginFramework::FloatingButton
07085748 0000001c R vtable for CTRPluginFramework::ComboBox
07085764 0000001c R vtable for CTRPluginFramework::Button
07085780 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085e80 00000040 r cond_names
07085ec0 00000010 r shift_names
07085ed0 00000040 r RegNames
07085f10 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
070868dc 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0708695c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07086964 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07086970 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07086984 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0708698c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07086a48 00000008 R CTRPluginFramework::Time::Zero
07086a50 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>
07086a6c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
07086a74 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
07086a8c 00000384 r UserManualFilled15_array
07086e10 00000384 r Unsplash15_array
07087194 00000384 r UnCheckedCheckbox_array
07087518 000009c4 r TrashFilled25_array
07087edc 000009c4 r Trash25_array
070888a0 00000384 r Star15_array
07088c24 00000384 r Shutdown15_array
07088fa8 00000384 r Settings15_array
0708932c 00000384 r Search15_array
070896b0 000009c4 r Save25_array
0708a074 00001900 r Rocket40_array
0708b974 00000384 r Restart15_array
0708bcf8 00000384 r RAM15_array
0708c07c 000009c4 r PlusFilled25_array
0708ca40 000009c4 r Plus25_array
0708d404 00000384 r More15_array
0708d788 00000384 r Maintenance15_array
0708db0c 000009c4 r KeyboardFilled25_array
0708e4d0 000009c4 r Keyboard25_array
0708ee94 000009c4 r InfoFilled25_array
0708f858 000009c4 r Info25_array
0709021c 00000384 r HandCursor15_array
070905a0 00000384 r Grid15_array
07090924 000009c4 r GameControllerFilled25_array
070912e8 000009c4 r GameController25_array
07091cac 00000384 r GameController15_array
07092030 00000384 r FolderFilled_array
070923b4 00000384 r File15_array
07092738 00000384 r EnterKeyFilled15_array
07092abc 00000384 r EnterKey15_array
07092e40 000009c4 r EditFilled25_array
07093804 000009c4 r Edit25_array
070941c8 000009c4 r DuplicateFilled25_array
07094b8c 000009c4 r Duplicate25_array
07095550 00000e10 r DefaultKeyboardCustomIcon_array
07096360 000009c4 r CutFilled25_array
07096d24 000009c4 r Cut25_array
070976e8 00000384 r Controller15_array
07097a6c 00000640 r CloseWindowFilled20_array
070980ac 00000640 r CloseWindow20_array
070986ec 000009c4 r ClipboardFilled25_array
070990b0 000009c4 r Clipboard25_array
07099a74 00000384 r ClearSymbolFilled15_array
07099df8 00000384 r ClearSymbol15_array
0709a17c 00000384 r CheckedCheckbox_array
0709a500 00000384 r CapsLockOnFilled15_array
0709a884 00000384 r CapsLockOn15_array
0709ac08 000009c4 r AddFavoriteFilled25_array
0709b5cc 000009c4 r AddFavorite25_array
0709bf90 00000384 r About15_array
0709c9d4 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
0709caa0 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
0709cda8 0000001c R vtable for CTRPluginFramework::MenuEntryTools
0709cf6c 00000038 R vtable for CTRPluginFramework::Search
0709cfd0 00000038 R vtable for CTRPluginFramework::Search32
0709d090 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0709d09c 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0709d0c0 00000014 R vtable for __gnu_cxx::recursive_init_error
0709d0d4 00000001 R std::nothrow
0709d0d8 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0709d0e4 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0709d10c 0000002c R vtable for __cxxabiv1::__si_class_type_info
0709d138 00000008 R typeinfo for std::type_info
0709d140 0000000d R typeinfo name for std::type_info
0709d150 00000404 R std::__detail::__prime_list
0709d554 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0709d564 00000018 V typeinfo name for std::_Sp_make_shared_tag
0709d57c 00000008 V typeinfo for std::_Sp_make_shared_tag
0709d660 0000000c R typeinfo for std::bad_alloc
0709d66c 0000000d R typeinfo name for std::bad_alloc
0709d67c 00000014 R vtable for std::bad_alloc
0709d6ac 0000000c R typeinfo for std::bad_array_new_length
0709d6b8 00000019 R typeinfo name for std::bad_array_new_length
0709d6d4 00000014 R vtable for std::bad_array_new_length
0709d6e8 0000000c R typeinfo for __cxxabiv1::__class_type_info
0709d6f4 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0709d718 0000002c R vtable for __cxxabiv1::__class_type_info
0709d768 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0709d770 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0709d778 0000000c R typeinfo for std::bad_exception
0709d784 00000008 R typeinfo for std::exception
0709d78c 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0709d7ac 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0709d7d0 00000012 R typeinfo name for std::bad_exception
0709d7e4 0000000d R typeinfo name for std::exception
0709d7f4 00000014 R vtable for std::bad_exception
0709d808 0000000c R typeinfo for std::logic_error
0709d814 0000000c R typeinfo for std::length_error
0709d820 0000000c R typeinfo for std::out_of_range
0709d82c 0000000c R typeinfo for std::invalid_argument
0709d838 00000010 R typeinfo name for std::logic_error
0709d848 00000011 R typeinfo name for std::length_error
0709d85c 00000011 R typeinfo name for std::out_of_range
0709d870 00000015 R typeinfo name for std::invalid_argument
0709d888 00000014 R vtable for std::logic_error
0709d89c 00000014 R vtable for std::length_error
0709d8b0 00000014 R vtable for std::out_of_range
0709d8c4 00000014 R vtable for std::invalid_argument
0709d920 00000890 R __log2_data
0709e1b0 00000004 R _global_impure_ptr
0709e1b4 00000060 R __month_lengths
0709e29c 00000014 r fpi.1
0709e2b0 00000014 r fpinan.0
0709e2c8 00000028 r tinytens
0709e32c 00000010 r blanks.1
0709e33c 00000010 r zeroes.0
0709e4a4 000000fc R _C_time_locale
0709e614 00000015 r day_name.1
0709e62c 00000024 r mon_name.0
0709e650 00000101 R _ctype_
0709e800 00000100 R __hexdig
0709e900 0000000c R _C_numeric_locale
0709e990 00000028 R __mprec_bigtens
0709e9b8 000000c8 R __mprec_tens
0709ea80 0000000c r p05.0
0709ea8c 0000006c R __action_table
0709eaf8 00000100 R __chclass
0709ebf8 0000006c R __state_table
0709ec64 00000010 r blanks.1
0709ec74 00000010 r zeroes.0
0709ec84 00000022 r basefix.0
0709ece8 00000010 r blanks.1
0709ecf8 00000010 r zeroes.0
0709ed1c 000000bc r a1
0709edd8 000000bc r a2
0709ee94 0000005b r a3
0709eef0 00000070 r a6
0709ef60 000000a2 r a7
0709f004 00000040 r a8
0709f044 0000172a r b02cf
070a0770 00001a7c r d02f4
070a21ec 000031e6 r categories
070a53dc 00000070 R dotab_stdnull
070a555c R __exidx_start
070a57ac R __exidx_end
070a57ac 00000004 D cwavCurrentVAPAConvCallback
070a57b0 00000001 D CTRPluginFramework::g_keepRunning
070a57b1 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
070a57b2 00000001 D CTRPluginFramework::SystemImpl::Language
070a57b4 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070a57b8 00000004 D CTRPluginFramework::Screenshot::Screens
070a57bc 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
070a57bd 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
070a57c0 00000004 D CTRPluginFramework::RendererPriv::g_customColor
070a57c4 000001f4 D opcode_names
070a59b8 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070a59bc 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070a59c0 00000004 D CTRPluginFramework::FwkSettings::Header
070a59c4 00000004 D g_charPerSheet
070a59c8 00000004 D UserManualFilled15
070a59cc 00000004 D Unsplash15
070a59d0 00000004 D UnCheckedCheckbox
070a59d4 00000004 D TrashFilled25
070a59d8 00000004 D Trash25
070a59dc 00000004 D Star15
070a59e0 00000004 D Shutdown15
070a59e4 00000004 D Settings15
070a59e8 00000004 D Search15
070a59ec 00000004 D Save25
070a59f0 00000004 D Rocket40
070a59f4 00000004 D Restart15
070a59f8 00000004 D RAM15
070a59fc 00000004 D PlusFilled25
070a5a00 00000004 D Plus25
070a5a04 00000004 D More15
070a5a08 00000004 D Maintenance15
070a5a0c 00000004 D KeyboardFilled25
070a5a10 00000004 D Keyboard25
070a5a14 00000004 D InfoFilled25
070a5a18 00000004 D Info25
070a5a1c 00000004 D HandCursor15
070a5a20 00000004 D Grid15
070a5a24 00000004 D GameControllerFilled25
070a5a28 00000004 D GameController25
070a5a2c 00000004 D GameController15
070a5a30 00000004 D FolderFilled
070a5a34 00000004 D File15
070a5a38 00000004 D EnterKeyFilled15
070a5a3c 00000004 D EnterKey15
070a5a40 00000004 D EditFilled25
070a5a44 00000004 D Edit25
070a5a48 00000004 D DuplicateFilled25
070a5a4c 00000004 D Duplicate25
070a5a50 00000004 D DefaultKeyboardCustomIcon
070a5a54 00000004 D CutFilled25
070a5a58 00000004 D Cut25
070a5a5c 00000004 D Controller15
070a5a60 00000004 D CloseWindowFilled20
070a5a64 00000004 D CloseWindow20
070a5a68 00000004 D ClipboardFilled25
070a5a6c 00000004 D Clipboard25
070a5a70 00000004 D ClearSymbolFilled15
070a5a74 00000004 D ClearSymbol15
070a5a78 00000004 D CheckedCheckbox
070a5a7c 00000004 D CapsLockOnFilled15
070a5a80 00000004 D CapsLockOn15
070a5a84 00000004 D AddFavoriteFilled25
070a5a88 00000004 D AddFavorite25
070a5a8c 00000004 D About15
070a5a90 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070a5a94 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070a5a98 00000004 d kCount
070a5a9c 00000004 d kDelay
070a5aa0 00000004 d kInterval
070a5aa4 00000004 D __cxxabiv1::__unexpected_handler
070a5aa8 00000004 D __cxxabiv1::__terminate_handler
070a5aac 0000000c d __sfp_recursive_mutex
070a5ab8 0000000c d __sinit_recursive_mutex
070a5ac4 00000004 D _impure_ptr
070a5ac8 00000460 d impure_data
070a5f28 00000408 D __malloc_av_
070a6330 00000004 D __malloc_sbrk_base
070a6334 00000004 D __malloc_trim_threshold
070a6338 0000000c d __malloc_recursive_mutex
070a6344 00000004 d __tz_mutex
070a6348 00000008 D _tzname
070a6350 0000000c D __atexit_recursive_mutex
070a6360 00000058 d tzinfo
070a63b8 00000002 d numempty
070a63bc 0000016c D __global_locale
070a6528 00000004 D environ
070a652c 0000000c d __env_recursive_mutex
070a6538 00000004 d __hndl_lock
070a653c 0000000c d __stderr_handle
070a6548 0000000c d __stdin_handle
070a6554 0000000c d __stdout_handle
070a6560 00001000 d handles
070a7560 0000008c D devoptab_list
070a7600 d _GLOBAL_OFFSET_TABLE_
070a760c D __tdata_lma
070a7618 d __frame_dummy_init_array_entry
070a7618 D __init_array_start
070a7618 B __preinit_array_end
070a7618 B __preinit_array_start
070a7618 D __tdata_lma_end
070a767c d __do_global_dtors_aux_fini_array_entry
070a767c D __init_array_end
070a76d0 D __bss_start__
070a76d0 00000004 B CTRPluginFramework::offset
070a76d4 000000b4 b CTRPluginFramework::original_speed
070a7788 00000004 B CTRPluginFramework::data
070a778c 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070a7798 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070a779c 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070a77a0 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070a77a4 00000004 b ncsndMutex
070a77a8 00000004 b ncsndCmdCurOff
070a77ac 00000004 b ncsndCmdStartOff
070a77b0 00000004 B ncsndSharedMem
070a77b4 00000004 B ncsndCSNDHandle
070a77b8 00000004 B ncsndChannels
070a77bc 00000004 b ncsndRefCount
070a77c0 00000010 B ncsndOffsets
070a77d0 00000004 B ncsndSharedMemSize
070a77d4 00000004 b ncsndSharedMemBlock
070a77d8 00000001 b ncsndCookieHooked
070a77dc 0000000c b ncsndCookie
070a77e8 b saved_stack
070a77f0 00000004 b cwavListCount
070a77f4 00000004 b cwavList
070a77f8 00000004 b cwavAddedToList
070a77fc b completed.1
070a7800 b object.0
070a7818 000009c4 b CTRPluginFramework::g_rng
070a81dc 00000004 B CTRPluginFramework::Process::OnPauseResume
070a81e0 00000004 B CTRPluginFramework::Process::exceptionCallback
070a81e4 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
070a81e8 00000004 b CTRPluginFramework::g_runningInstance
070a81ec 0000001c b CTRPluginFramework::g_dummy
070a8208 00000180 b CTRPluginFramework::g_keyName
070a8388 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a838a 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a838c 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a8390 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a8394 00000004 b g_onLoadCroHook
070a8398 00000004 b g_onLoadCroLock
070a839c 00000004 B CTRPluginFramework::g_keepEvent
070a83a0 00000008 B CTRPluginFramework::_sdmcArchive
070a83a8 00000004 B CTRPluginFramework::g_keepThreadHandle
070a83ac 00000004 B CTRPluginFramework::g_continueGameEvent
070a83b0 00000008 b CTRPluginFramework::g_mainThread
070a83b8 00001000 b CTRPluginFramework::keepThreadStack
070a93b8 00000004 b g_mainThreadVars
070a93bc 00000004 b plgEvent
070a93c0 00000004 b plgLdrArbiter
070a93c4 00000004 b plgLdrHandle
070a93c8 00000004 b plgLdrRefCount
070a93cc 00000004 b plgReply
070a93d0 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
070a93d4 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
070a93d8 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
070a93e0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
070a93e8 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
070a93ec 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
070a93f0 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
070a93f8 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
070a9400 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
070a9404 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
070a9408 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
070a940c 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
070a9414 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
070a9418 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
070a941c 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
070a9420 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
070a9424 00000004 B CTRPluginFramework::SystemImpl::AptStatus
070a9428 00000008 b CTRPluginFramework::g_sleepEvent
070a9430 00000004 B CTRPluginFramework::Screenshot::_filecount
070a9434 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070a943c 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070a9444 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
070a9448 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070a9460 00000008 B CTRPluginFramework::Screenshot::Timer
070a9468 00000004 B CTRPluginFramework::Screenshot::_mode
070a946c 00000008 B CTRPluginFramework::Screenshot::_task
070a9474 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070a9490 00000008 B CTRPluginFramework::Screenshot::_timer
070a9498 00000004 B CTRPluginFramework::Screenshot::_display
070a949c 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
070a94a0 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070a94a4 00000004 b CTRPluginFramework::isReady
070a94a8 00000004 B CTRPluginFramework::ScreenImpl::Top
070a94ac 00000004 B CTRPluginFramework::ScreenImpl::Bottom
070a94b0 000000ac b CTRPluginFramework::_botBuf
070a955c 000000ac b CTRPluginFramework::_topBuf
070a9608 000000a8 B CTRPluginFramework::Scheduler::_singleton
070a96b0 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070a96b4 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
070a96c0 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
070a96c4 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
070a96d0 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
070a96e0 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
070a96e4 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070a96e8 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
070a96ec 00000004 B CTRPluginFramework::ProcessImpl::Status
070a96f0 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070a9758 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070a9760 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070a9764 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070a9768 00000044 b CTRPluginFramework::g_previousException
070a97ac 0000001c B CTRPluginFramework::HookManager::_singleton
070a97c8 0000000c b sAddrMap
070a97d4 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
070a97d8 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
070a97dc 00000008 b CTRPluginFramework::Heap::g_heapPool
070a97e4 0000000c b CTRPluginFramework::Heap::_mutex
070a97f0 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
070a9808 0000000c B CTRPluginFramework::FSPath::FSMutex
070a9814 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
070a9818 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
070a981c 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
070a9828 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
070a982c 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
070a9830 00000010 b CTRPluginFramework::SubMenu::Draw()::background
070a9840 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
070a984c 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
070a9850 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
070a9854 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070a9858 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a985c 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
070a9860 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070a9864 00000004 b CTRPluginFramework::g_bymeString
070a9868 00000004 b CTRPluginFramework::g_ctrpfString
070a9870 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070a9878 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a9880 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
070a9888 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
070a9890 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
070a9894 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070a989c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070a98a0 00000004 b CTRPluginFramework::g_radioId
070a98a4 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070a98a8 00000004 b CTRPluginFramework::__pmARinstance
070a98ac 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070a98b4 00000004 B CTRPluginFramework::MenuItem::_uidCounter
070a98b8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070a98bc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070a98c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070a98c4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a98c8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070a98cc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070a98d0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070a98d4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070a98d8 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
070a98e4 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
070a98f0 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
070a9900 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070a9908 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
070a990c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070a991c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070a9930 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a9938 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070a9948 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070a9958 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070a9968 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070a9978 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
070a997c 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070a9980 00000004 B CTRPluginFramework::__g_hexEditor
070a9984 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070a9994 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
070a9998 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
070a999c 00000010 b CTRPluginFramework::GuideReader::Draw()::background
070a99ac 00000004 b CTRPluginFramework::__converter
070a99b0 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
070a99c0 00000028 B CTRPluginFramework::Window::BottomWindow
070a99e8 00000028 B CTRPluginFramework::Window::TopWindow
070a9a10 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070a9a14 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070a9a20 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
070a9a24 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
070a9a28 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
070a9a2c 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
070a9a38 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
070a9a40 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
070a9a44 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
070a9a68 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
070a9a80 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
070a9a84 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
070a9a88 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
070a9a8c 0000000c B CTRPluginFramework::OSDImpl::Notifications
070a9a98 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
070a9aa0 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
070a9aa8 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
070a9ab0 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
070a9ab8 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070a9ac0 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
070a9ac4 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
070a9ad0 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
070a9ad4 00000004 B CTRPluginFramework::OSDImpl::OSDHook
070a9ad8 0000000c B CTRPluginFramework::OSDImpl::RecLock
070a9ae4 0000000c B CTRPluginFramework::OSDImpl::Callbacks
070a9af0 00000018 B CTRPluginFramework::OSDImpl::TopScreen
070a9b08 00000050 b CTRPluginFramework::g_fpsCounter
070a9b58 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
070a9b5c 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
070a9b78 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
070a9b7c 00000004 B CTRPluginFramework::g_fontAllocated
070a9b80 00000004 B CTRPluginFramework::g_glyphAllocated
070a9b84 0000000c B CTRPluginFramework::Font::_mutex
070a9b90 00000004 B CTRPluginFramework::ARHandler::ActiveData
070a9b94 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070a9b98 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
070a9b9c 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070a9ba0 00000010 B CTRPluginFramework::ARHandler::Data
070a9bb0 00000008 B CTRPluginFramework::ARHandler::Offset
070a9bb8 00000008 B CTRPluginFramework::ARHandler::Storage
070a9bc0 00000001 b CTRPluginFramework::ToggleFloat
070a9bc8 00000fa0 b CTRPluginFramework::arStack
070aab68 00000004 b CTRPluginFramework::g_context
070aab6c 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070aab70 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070aab7c 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070aab80 00000004 b CTRPluginFramework::__arCodeEditor
070aab84 00000001 b CTRPluginFramework::g_condAgainstData
070aab85 00000001 b CTRPluginFramework::g_newCondDataToggle
070aab88 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070aab94 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
070aab98 0000000c B CTRPluginFramework::g_codeTypes
070aaba4 00000008 B CTRPluginFramework::Preferences::Backlights
070aabac 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
070aabc4 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
070aabdc 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
070aabf4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
070aabf8 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
070aabfc 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
070aac00 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
070aac08 00000008 B CTRPluginFramework::Preferences::Flags
070aac10 000000a8 B CTRPluginFramework::Preferences::Settings
070aacb8 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070aacbc 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070aacd4 0000000c b __mutex
070aace0 00000018 b __threads
070aacf8 00000004 B CTRPluginFramework::System::OnAbort
070aacfc 00000004 B CTRPluginFramework::Controller::_keysReleased
070aad00 00000004 B CTRPluginFramework::Controller::_keysDown
070aad04 00000004 B CTRPluginFramework::Controller::_keysHeld
070aad08 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070aad0c 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
070aad10 00000004 b CTRPluginFramework::g_HookMode
070aad14 00000004 b CTRPluginFramework::g_OpenFileLock
070aad18 00000040 b CTRPluginFramework::g_hookExportFile
070aad58 00000004 b CTRPluginFramework::g_screenshotEntry
070aad5c 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
070aad60 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
070aad64 00000004 b CTRPluginFramework::g_mode
070aad68 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070aad70 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
070aad74 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070aad78 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070aad7c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070aad8c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070aad9c 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070aada0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070aada8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070aadb0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070aadb8 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070aadbc 00000001 b CTRPluginFramework::g_progressLoop
070aadc0 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070aadd0 00000004 B CTRPluginFramework::_pool
070aadd4 00000004 b arbiter
070aadd8 00000004 B g_sharedFont
070aaddc 00000004 b sharedFontAddr
070aade0 00000004 b srvHandle
070aade4 00000004 b srvRefCount
070aade8 00000004 b currentAddr
070aadec 00000004 b maxAddr
070aadf0 00000004 b minAddr
070aadf4 00000004 b cfguHandle
070aadf8 00000004 b cfguRefCount
070aadfc 00000004 b gspEvent
070aae00 00000004 b gspEventThread
070aae04 00000004 b gspGpuHandle
070aae08 00000001 b gspGpuRight
070aae0c 00000004 b gspRefCount
070aae10 00000001 b gspRunEvents
070aae14 00000004 b gspSharedMem
070aae18 00000004 b gspSharedMemHandle
070aae1c 00000004 b acHandle
070aae20 00000004 b acRefCount
070aae24 00000004 b amHandle
070aae28 00000004 b amRefCount
070aae2c 0000000c b aptFirstHook
070aae38 00000004 b aptLockHandle
070aae3c 00000001 b flagInit.1
070aae3d 00000001 b flagValue.0
070aae40 00000004 b serviceName.6
070aae44 00000006 b aVec
070aae4c 00000004 b cPos
070aae50 00000006 b gRate
070aae58 00000014 B hidEvents
070aae6c 00000004 B hidHandle
070aae70 00000004 B hidMemHandle
070aae74 00000004 b hidRefCount
070aae78 00000004 B hidSharedMem
070aae7c 00000004 b kDown
070aae80 00000004 b kHeld
070aae84 00000004 b kOld
070aae88 00000004 b kRepeat
070aae8c 00000004 b kUp
070aae90 00000004 b tPos
070aae94 00000001 b usingIrrst
070aae98 00000004 b srvPmHandle
070aaea0 00000080 b fsExemptArchives
070aaf20 00000004 b fsuHandle
070aaf24 00000004 b fsuRefCount
070aaf28 00000004 B __ctru_heap
070aaf2c 00000004 V __ctru_heap_size
070aaf30 00000004 B __ctru_linear_heap
070aaf34 00000004 b csPos
070aaf38 00000004 B irrstEvent
070aaf3c 00000004 B irrstHandle
070aaf40 00000004 B irrstMemHandle
070aaf44 00000004 b irrstRefCount
070aaf48 00000004 B irrstSharedMem
070aaf4c 00000004 b kHeld
070aaf50 00000004 b (anonymous namespace)::__new_handler
070aaf54 00000010 b (anonymous namespace)::emergency_pool
070aaf64 0000000c b eh_globals
070aaf70 00000010 V std::string::_Rep::_S_empty_rep_storage
070aaf80 00000028 B __malloc_current_mallinfo
070aafa8 00000004 B __malloc_max_sbrked_mem
070aafac 00000004 B __malloc_max_total_mem
070aafb0 00000004 B __malloc_top_pad
070aafb4 0000000b b __tzname_dst
070aafc0 0000000b b __tzname_std
070aafcc 00000004 b prev_tzenv
070aafd0 00000004 B _daylight
070aafd4 00000004 B _timezone
070aafd8 00000004 b initial_env
070aafdc 00000004 b heap_start.0
070aafe0 00000004 B fake_heap_end
070aafe4 00000004 B fake_heap_start
070aafe8 00000048 B __syscalls
070ab030 B __tls_start
070ab058 B __bss_end__
070ab058 A __end__
070ab058 B __tls_end
