00000000 d _TLS_MODULE_BASE_
00000000 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000001 D CTRPluginFramework::PrivColor::_format
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000024 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000025 00000001 b __tls_guard
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000084 T CTRPluginFramework::IsInRace()
0700133c 000000bc T CTRPluginFramework::GetRacePointer()
070013f8 0000009c T CTRPluginFramework::GetItemPointer()
07001494 00000058 T CTRPluginFramework::writeItem(unsigned long)
070014ec 0000002c T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
07001518 0000002c T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
07001544 0000002c T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
07001570 00000028 T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
07001598 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
0700159c 00000028 T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
070015c4 00000030 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
070015f4 00000018 t __tcf_0
0700160c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07001690 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07001770 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07001950 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07001954 00000004 T CTRPluginFramework::OnProcessExit()
07001958 00000080 W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::vector(std::initializer_list<CTRPluginFramework::MenuEntry*>, std::allocator<CTRPluginFramework::MenuEntry*> const&)
07001958 00000080 W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::vector(std::initializer_list<CTRPluginFramework::MenuEntry*>, std::allocator<CTRPluginFramework::MenuEntry*> const&)
070019d8 000005e4 T CTRPluginFramework::main()
07001fbc T svcCustomBackdoor
07001fc4 T svcConvertVAToPA
07001fcc T svcFlushDataCacheRange
07001fd4 T svcInvalidateEntireInstructionCache
07001fdc T svcMapProcessMemoryEx
07001ff0 T svcUnmapProcessMemoryEx
07001ff8 T svcControlProcess
07002000 00000070 t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07002070 000000d8 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07002148 000004ac t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070025f4 00001008 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070035fc 0000008c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
07003688 00000094 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700371c 00000044 T CTRPluginFramework::InitializeRandomEngine()
07003760 000000e0 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07003840 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07003848 0000004c T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07003894 0000018c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07003a20 00000144 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07003b64 000000c0 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07003c24 00000058 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07003c7c 000000cc T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07003d48 0000004c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07003d94 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07003e44 0000001c T CTRPluginFramework::ResetColor[abi:cxx11]()
07003e60 00000068 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07003ec8 0000003c T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07003f04 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07003f04 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07003f30 00000018 T CTRPluginFramework::LineReader::~LineReader()
07003f30 00000018 T CTRPluginFramework::LineReader::~LineReader()
07003f48 0000017c T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070040c4 00000010 T CTRPluginFramework::Process::GetHandle()
070040d4 00000010 T CTRPluginFramework::Process::GetTitleID()
070040e4 000000b4 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07004198 000000a0 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07004238 00000024 T CTRPluginFramework::Process::GetTextSize()
0700425c 00000008 T CTRPluginFramework::Process::Pause()
07004264 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07004274 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700431c 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07004320 00000050 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07004370 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0700438c 0000001c T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
070043a8 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070043c8 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
070043e8 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07004408 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
0700442c 00000160 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700458c 00000254 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070047e0 00000150 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004930 0000016c T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004a9c 00000088 T CTRPluginFramework::File::Close() const
07004b24 00000224 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07004d48 000000cc T CTRPluginFramework::File::Read(void*, unsigned long) const
07004e14 000000fc T CTRPluginFramework::File::Write(void const*, unsigned long)
07004f10 00000050 T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07004f60 000000e8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07005048 00000008 T CTRPluginFramework::File::Tell() const
07005050 00000034 T CTRPluginFramework::File::Rewind() const
07005084 00000030 T CTRPluginFramework::File::Flush() const
070050b4 00000074 T CTRPluginFramework::File::GetSize() const
07005128 00000008 T CTRPluginFramework::File::IsOpen() const
07005130 000000b8 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
070051e8 00000048 T CTRPluginFramework::File::File()
070051e8 00000048 T CTRPluginFramework::File::File()
07005230 00000068 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07005230 00000068 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07005298 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07005348 00000268 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070055b0 000002ec t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700589c 000005e8 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07005e84 000001ac T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006030 00000160 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006190 00000168 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070062f8 00000254 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700654c 00000160 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070066ac 000002b0 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700695c 00000050 T CTRPluginFramework::Directory::Close() const
070069ac 000000b8 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07006a64 00000008 T CTRPluginFramework::Directory::IsOpen() const
07006a6c 0000003c T CTRPluginFramework::Directory::Directory()
07006a6c 0000003c T CTRPluginFramework::Directory::Directory()
07006aa8 00000060 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07006aa8 00000060 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07006b08 000000f4 T CTRPluginFramework::Directory::~Directory()
07006b08 000000f4 T CTRPluginFramework::Directory::~Directory()
07006bfc 000002cc W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006ec8 000002a8 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07007170 000001d0 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07007340 00000908 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07007c48 00000218 T CTRPluginFramework::Directory::_List() const
07007e60 00000214 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07008074 0000021c T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07008290 00000020 T CTRPluginFramework::Clock::Clock()
07008290 00000020 T CTRPluginFramework::Clock::Clock()
070082b0 00000030 T CTRPluginFramework::Clock::GetElapsedTime() const
070082e0 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07008318 00000038 T CTRPluginFramework::Clock::Restart()
07008350 00000078 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07008350 00000078 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
070083c8 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
070083c8 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
070083f4 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07008408 00000038 T CTRPluginFramework::PluginMenu::Run() const
07008440 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07008448 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07008458 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07008464 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07008464 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070084b0 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070084b0 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070084f4 0000007c T CTRPluginFramework::MessageBox::~MessageBox()
070084f4 0000007c T CTRPluginFramework::MessageBox::~MessageBox()
07008570 00000008 T CTRPluginFramework::MessageBox::operator()() const
07008578 0000007c T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
07008578 0000007c T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
070085f4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070085f4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
0700861c 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070086c8 000000bc T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070086c8 000000bc T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008784 00000024 T CTRPluginFramework::Hotkey::~Hotkey()
07008784 00000024 T CTRPluginFramework::Hotkey::~Hotkey()
070087a8 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
070087b0 000000a8 T CTRPluginFramework::Hotkey::AskForKeys()
07008858 000000a4 T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070088fc 00000238 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07008b34 00000018 T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07008b34 00000018 T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07008b4c 00000050 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008b4c 00000050 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008b9c 00000040 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07008bdc 00000180 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07008d5c 00000028 T CTRPluginFramework::HotkeyManager::Count()
07008d84 00000340 W void std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::_M_realloc_insert<CTRPluginFramework::Hotkey const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hotkey*, std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> > >, CTRPluginFramework::Hotkey const&)
070090c4 000000f0 T CTRPluginFramework::HotkeyManager::operator+=(CTRPluginFramework::Hotkey const&)
070091b4 00000278 T CTRPluginFramework::HotkeyManager::AskForKeys()
0700942c 00000224 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07009650 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
0700969c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700969c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070096ec 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070096ec 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700971c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07009724 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070097e8 000000f4 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
070098dc 000000ac T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07009988 000000ac T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07009a34 000000a0 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07009ad4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009ad4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009b1c 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07009b1c 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07009b88 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07009b88 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07009bb4 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07009bbc 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07009bd8 00000028 T CTRPluginFramework::Keyboard::Open() const
07009c00 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07009cc8 000001d4 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07009e9c 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07009f64 000001d4 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
0700a138 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
0700a200 000001d4 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0700a3d4 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
0700a46c 00000194 T CTRPluginFramework::Keyboard::Open(float&, float) const
0700a600 00000070 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0700a670 00000084 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700a6f4 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
0700a6fc 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
0700a704 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
0700a70c 00000114 T CTRPluginFramework::Color::Fade(float)
0700a820 00000224 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
0700aa44 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
0700aa84 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
0700aa8c 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700ab38 00000024 T OnLoadCro
0700ab5c 00000004 W CTRPluginFramework::OnPluginToSwap()
0700ab60 00000004 W CTRPluginFramework::OnPluginFromSwap()
0700ab64 00000304 T CTRPluginFramework::Initialize()
0700ae68 000000ac T CTRPluginFramework::ThreadExit()
0700af14 00000058 T abort
0700af6c 00000048 T CTRPluginFramework::ThreadInit(void*)
0700afb4 000000a8 T __entrypoint
0700b060 00000618 T CTRPluginFramework::KeepThreadMain(void*)
0700b678 00000040 t _GLOBAL__sub_I_g_gspEventThreadPriority
0700b6b8 00000020 t _GLOBAL__sub_D_g_gspEventThreadPriority
0700b6d8 000000b8 t NCSNDCmd_Add
0700b790 00000084 t NCSNDCmd_Execute.constprop.0
0700b814 0000005c T ncsndNotifyAptEvent
0700b870 00000004 t ncsndAptHook
0700b874 000001c8 T ncsndInit
0700ba3c 000000ac T ncsndExit
0700bae8 00000024 T ncsndInitializeSound
0700bb0c 00000260 T ncsndPlaySound
0700bd6c 00000040 T ncsndStopSound
0700bdac 00000090 T ncsndIsPlaying
0700be3c T LoadCROHooked
0700be50 T AR__ExecuteRoutine
0700be78 t stackBak
0700be80 0000003c t __ctru_get_reent
0700bebc 0000003c T __getThreadLocalStorage
0700bef8 000000f4 T __system_initSyscalls
0700bfec 00000020 T __libctru_exit
0700c00c 00000020 T __appExit
0700c02c 00000144 T __createThread
0700c170 00000138 T __startThread
0700c2a8 00000024 T threadGetHandle
0700c2cc 0000002c T threadFree
0700c2f8 00000024 T threadJoin
0700c31c 00000020 T threadGetCurrent
0700c33c 0000005c T threadExit
0700c398 00000040 t _thread_begin
0700c3d8 00000088 T plgLdrExit
0700c460 000000ec T plgLdrInit
0700c54c 00000050 T PLGLDR__GetPluginPath
0700c59c 00000024 T PLGLDR__FetchEvent
0700c5c0 000000d4 T PLGLDR__Reply
0700c694 000000a8 T __system_allocateHeaps
0700c73c 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0700c768 000001ac t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0700c914 000002a8 t CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&) [clone .part.0] [clone .isra.0]
0700cbbc 000002e4 T CTRPluginFrameworkImpl::Services::GSP::Initialize()
0700cea0 000000dc T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
0700cf7c 00000004 T __gsp__Update
0700cf80 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
0700cf98 00000028 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
0700cfc0 000000e0 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
0700d0a0 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
0700d0e8 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
0700d11c 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
0700d148 00000148 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
0700d290 00000030 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
0700d2c0 000000d0 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0700d390 00000040 t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0700d3d0 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0700d3f0 000000cc T CTRPluginFramework::SystemImpl::Initialize()
0700d4bc 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0700d4d4 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
0700d510 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
0700d530 0000003c T CTRPluginFramework::SystemImpl::Status()
0700d56c 00000004 W std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0700d570 0000000c W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_destroy()
0700d57c 00000278 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*) [clone .part.0]
0700d7f4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0700d8a4 0000028c T CTRPluginFramework::Screenshot::TaskCallback(void*)
0700db30 000003cc T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0700defc 00000388 T CTRPluginFramework::Screenshot::UpdateFileCount()
0700e284 00000048 T CTRPluginFramework::Screenshot::Initialize()
0700e2cc 00000064 t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700e330 000000c8 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700e3f8 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
0700e410 00000164 T CTRPluginFramework::ScreenImpl::Initialize()
0700e574 00000054 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
0700e5c8 000000e4 T CTRPluginFramework::ScreenImpl::Fade(float)
0700e6ac 000000fc t CTRPluginFramework::ScreenImpl::Acquire(bool) [clone .part.0]
0700e7a8 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
0700e804 00000028 T CTRPluginFramework::ScreenImpl::Release()
0700e82c 0000007c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0700e8a8 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
0700e940 00000034 T CTRPluginFramework::ScreenImpl::Copy()
0700e974 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0700e97c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0700e9d8 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0700ea28 0000003c T CTRPluginFramework::ScreenImpl::Clean()
0700ea64 000000bc T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
0700eb20 000000a4 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
0700ebc4 0000007c T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
0700ec40 0000004c T CTRPluginFramework::ScreenImpl::SwapBuffer()
0700ec8c 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
0700eca0 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
0700ecbc 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
0700ecd8 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
0700ece0 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
0700ece8 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
0700ecf0 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
0700ed0c 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0700ed28 00000068 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
0700ed90 00000030 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
0700edc0 0000005c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
0700ee1c 00000064 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0700ee80 000000fc T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0700ef7c 000000a8 T CTRPluginFramework::Scheduler::Initialize()
0700f024 0000004c T CTRPluginFramework::Scheduler::Exit()
0700f070 0000021c W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0700f28c 00000160 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0700f3ec 000001d0 W __gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > > std::__remove_if<__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, __gnu_cxx::__ops::_Iter_equals_val<std::shared_ptr<CTRPluginFramework::TaskContext> const> >(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, __gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, __gnu_cxx::__ops::_Iter_equals_val<std::shared_ptr<CTRPluginFramework::TaskContext> const>)
0700f5bc 000001e8 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0700f7a4 0000018c T CTRPluginFramework::Scheduler__CoreHandler(void*)
0700f930 00000094 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0700f9c4 00000178 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0700fb3c 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
0700fb88 00000098 T CTRPluginFramework::ProcessImpl::Play(bool)
0700fc20 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0700fc3c 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0700fc58 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0700fcbc 00000074 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0700fd30 000000b0 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0700fde0 000000c4 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0700fea4 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
0700fedc 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
0700fef4 t _store_reg_loop
0700ff14 00000118 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0701002c 000000f0 T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0701011c 000000f0 T CTRPluginFramework::ProcessImpl::Initialize()
0701020c 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07010278 0000010c T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07010384 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
070103b0 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0701040c 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07010418 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07010428 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07010440 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07010480 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
070104c4 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
070104d8 00000004 T Kernel::Initialize()
070104dc 00000028 T Kernel::Memcpy(void*, void const*, unsigned long)
07010504 0000000c T KProcess::GetCurrent()
07010510 00000024 T KProcess::PatchCore2Access()
07010534 00000034 T KProcess__PatchCategory
07010568 00000034 T KProcess__PatchMaxPriority
0701059c 00000028 T KProcess::PatchMaxThreads()
070105c4 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
070105e4 000002d4 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
070108b8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07010968 000000d4 T CTRPluginFramework::HookManager::HookManager()
07010968 000000d4 T CTRPluginFramework::HookManager::HookManager()
07010a40 000000e8 T __hook__CheckTlsValue
07010b28 00000108 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
07010c30 00000068 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
07010c98 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07010cfc 0000000c T CTRPluginFramework::HookManager::Lock()
07010d08 0000000c T CTRPluginFramework::HookManager::Unlock()
07010d14 00000064 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
07010d78 00000074 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
07010dec 00000134 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
07010f20 00000090 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07010fb0 00000168 T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
07011118 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
07011124 0000003c t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
07011160 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07011184 00000004 t addrMapNodeDestructor(rbtree_node*)
07011188 00000148 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
070112d0 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
070112d8 00000068 T CTRPluginFramework::Heap::Free(void*)
07011340 0000000c T CTRPluginFramework::Heap::SpaceFree()
0701134c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07011358 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07011378 00000284 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070115fc 00000238 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07011834 000000cc T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07011834 000000cc T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07011900 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0701192c 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
07011988 00000094 T CTRPluginFramework::EventManager::EventManager()
07011988 00000094 T CTRPluginFramework::EventManager::EventManager()
07011a1c 000001f0 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07011c0c 00000480 T CTRPluginFramework::EventManager::ProcessEvents()
07012090 00000134 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
070121c4 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
070121cc 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
070121d4 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
070121d8 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
070121dc 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07012200 0000004c T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0701224c 00000130 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0701237c 0000025c T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
070125d8 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
070125fc 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07012648 00000154 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07012648 00000154 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701279c 00000054 T CTRPluginFramework::SubMenu::~SubMenu()
0701279c 00000054 T CTRPluginFramework::SubMenu::~SubMenu()
070127f0 0000001c T CTRPluginFramework::SubMenu::operator()()
07012810 0000023c T CTRPluginFramework::SubMenu::Draw()
07012a4c 000000ec T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07012b38 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07012b40 00000374 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07012eb4 00000024 T CTRPluginFramework::SubMenu::OptionsCount()
07012ed8 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
07012ed8 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
07012fdc 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07012fe4 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07013004 000001b0 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
070131b4 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070131d4 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
070131f0 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0701320c 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07013214 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07013220 00000f2c T CTRPluginFramework::PluginMenuImpl::Run()
0701414c 00000138 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07014284 000001e4 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07014468 000001cc T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07014634 00000110 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07014744 00000140 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07014884 0000025c W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07014ae0 000001f8 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07014cd8 000001dc T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07014eb4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07014ec0 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07014ee0 00000390 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07014ee0 00000390 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015270 000002f0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07015270 000002f0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07015560 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07015568 00000094 t __tcf_0
070155fc 00000110 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0701570c 0000013c t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015848 00000694 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07015848 00000694 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07015edc 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07015ee8 000003ac T CTRPluginFramework::PluginMenuHome::_RenderTop()
07016294 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
070163c8 0000058c T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07016954 00000124 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07016a78 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07016b08 000000e4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07016bec 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
07016c70 000000b8 T CTRPluginFramework::PluginMenuHome::Init()
07016d28 000000a0 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07016dc8 00000060 T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07016e28 0000012c T CTRPluginFramework::PluginMenuHome::UpdateNote()
07016f54 00000064 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07016fb8 00000174 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07017130 000003f8 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07017528 000002c4 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
070177ec 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070177ec 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07017828 000001a4 T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
070179cc 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07017a24 0000024c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07017c70 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07017ccc 00000150 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07017e1c 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07017fb8 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07017fd0 00000110 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
070180e0 00000374 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07018454 00000110 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07018564 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
070185ec 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07018610 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07018624 00000124 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07018748 00000094 t __tcf_0
070187dc 000001f0 t CTRPluginFramework::ProcessPathString(unsigned char*)
070189cc 00000070 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07018a3c 00000290 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07018a3c 00000290 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07018ccc 000000b4 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07018d80 000002e0 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07019060 00000324 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07019384 000001d8 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0701955c 000001b0 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0701970c 000003e4 T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07019af0 00000284 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07019d74 00000360 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0701a0d4 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0701a260 00000238 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0701a498 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0701a564 00000248 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0701a7ac 00000238 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0701a9e4 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0701a9f4 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0701aa04 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0701aa14 00000058 W CTRPluginFramework::MenuItem::~MenuItem()
0701aa14 00000058 W CTRPluginFramework::MenuItem::~MenuItem()
0701aa6c 00000060 W CTRPluginFramework::MenuItem::~MenuItem()
0701aacc 00000120 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701aacc 00000120 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701abec 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701ac08 000000d0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ac08 000000d0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701acd8 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701acd8 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701adac 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701adbc 00000294 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701b050 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0701b068 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701b08c 000000bc T CTRPluginFramework::MenuFolderImpl::Clear()
0701b148 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0701b158 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0701b178 00000110 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701b288 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0701b2e8 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701b2fc 00000028 T CTRPluginFramework::MenuEntryImpl::Enable()
0701b324 000002d4 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701b5f8 00000078 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701b5f8 00000078 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701b670 00000080 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701b6f0 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b6f0 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b7dc 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b7dc 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b8cc 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701b8d4 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701b8e8 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701b8f4 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701b8fc 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701b920 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701b93c 00000088 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701b9c4 000000f4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701b9c4 000000f4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701bab8 0000014c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701bab8 0000014c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701bc04 00000044 T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0701bc48 00000060 T CTRPluginFramework::Menu::CloseAll()
0701bca8 00000058 T CTRPluginFramework::Menu::~Menu()
0701bca8 00000058 T CTRPluginFramework::Menu::~Menu()
0701bd00 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701bd0c 00000008 T CTRPluginFramework::Menu::GetFolder() const
0701bd14 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701bd1c 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
0701bd5c 00000400 T CTRPluginFramework::Menu::Draw() const
0701c160 000000c0 T CTRPluginFramework::Menu::_ScrollUp(int)
0701c220 00000358 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0701c578 00000184 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701c6fc 0000008c T CTRPluginFramework::Menu::ShowNote()
0701c788 00000008 T CTRPluginFramework::Menu::CloseNote()
0701c790 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0701c798 0000003c W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0701c7d4 00000044 T CTRPluginFramework::Menu::Pop()
0701c818 000000b0 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701c8c8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701c978 000001ec T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c978 000001ec T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701cb64 00000200 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701cb64 00000200 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701cd64 000000b8 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701cd64 000000b8 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701ce1c 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701ce24 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
0701ce2c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701ce34 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
0701ce3c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701ce44 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
0701ce4c 00000068 T CTRPluginFramework::KeyboardImpl::Clear()
0701ceb4 00000198 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701d04c 000004d4 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701d520 000001cc T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
0701d6ec 00000084 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0701d770 000000d4 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701d844 00000090 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701d8d4 00000090 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701d964 0000018c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701daf0 0000017c T CTRPluginFramework::KeyboardImpl::_Update(float)
0701dc6c 000006e4 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701e350 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701e3b8 0000008c T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701e444 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
0701e4ec 000005f8 T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0701eae4 0000008c T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701eb70 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701eb78 00000064 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0701ebdc 00000230 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701ee0c 00000114 W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0701ef20 00000110 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
0701f030 00000374 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0701f3a4 00000188 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char, CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char&&, CTRPluginFramework::Rect<int>&)
0701f52c 0000007c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
0701f5a8 00000190 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701f738 00000088 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701f7c0 00000580 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701fd40 00000584 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
070202c4 000001d8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char const (&) [3], CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char const (&) [3], CTRPluginFramework::Rect<int>&)
0702049c 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07020558 000001d8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char const (&) [4], CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char const (&) [4], CTRPluginFramework::Rect<int>&)
07020730 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
070207ec 00000a2c T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07021218 00000c40 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07021e58 00000188 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char&, CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char&, CTRPluginFramework::Rect<int>&)
07021fe0 0000007c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
0702205c 00000204 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07022260 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
070222a8 00000088 t CTRPluginFramework::KeyboardImpl::_Hexadecimal() [clone .part.0]
07022330 00000020 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07022350 000000a8 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
070223f8 000005e0 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
070229d8 00000338 T CTRPluginFramework::KeyboardImpl::Run()
07022d10 0000004c W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07022d10 0000004c W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07022d5c 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07022da0 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07022dcc 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07022e7c 00000060 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07022e7c 00000060 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07022edc 000000b0 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07022f8c 00000140 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
070230cc 00000084 T CTRPluginFramework::HotkeysModifier::_Update()
07023150 000001dc T CTRPluginFramework::HotkeysModifier::operator()()
0702332c 000002c8 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
070235f4 000002f8 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070235f4 000002f8 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070238ec 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070238ec 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070238f0 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070238f0 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070238f4 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070238f4 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070238f8 00000014 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0702390c 00000014 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023920 00000014 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023934 000001a8 T CTRPluginFramework::HexEditor::ByteView::Draw()
07023adc 000000f8 T CTRPluginFramework::HexEditor::IntegerView::Draw()
07023bd4 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07023d10 000003dc T CTRPluginFramework::HexEditor::ByteView::UpdateView()
070240ec 0000025c T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07024348 00000324 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0702466c 000002b8 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07024924 00000138 T CTRPluginFramework::HexEditor::~HexEditor()
07024924 00000138 T CTRPluginFramework::HexEditor::~HexEditor()
07024a5c 0000019c T CTRPluginFramework::HexEditor::_CreateCheat()
07024bf8 00000078 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07024c70 00000040 T CTRPluginFramework::HexEditor::_MoveForward()
07024cb0 000004c4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07024cb0 000004c4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07025174 000000b4 T CTRPluginFramework::HexEditor::SetView(unsigned long)
07025228 00000130 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07025358 00000010 T CTRPluginFramework::HexEditor::Refresh()
07025368 00000248 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
070255b0 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0702563c 0000009c T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
070256d8 000001b8 t CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short) [clone .part.0]
07025890 00000050 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
070258e0 00000050 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07025930 00000050 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07025980 00000108 T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07025a88 000000ec T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07025b74 000000dc T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07025c50 000002b0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07025f00 00000234 T CTRPluginFramework::HexEditor::_Update()
07026134 000001a4 T CTRPluginFramework::HexEditor::_JumpTo(int)
070262d8 00000074 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0702634c 000002ec T CTRPluginFramework::HexEditor::_BrowseHistory()
07026638 000003ec T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07026a24 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07026ad4 0000068c t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07027160 00000260 T CTRPluginFramework::GuideReader::GuideReader()
07027160 00000260 T CTRPluginFramework::GuideReader::GuideReader()
070273c0 00000190 T CTRPluginFramework::GuideReader::_LoadBMP()
07027550 000007a8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0]
07027cf8 0000015c t CTRPluginFramework::GuideReader::Draw() [clone .part.0]
07027e54 000000a8 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07027efc 000000e8 T CTRPluginFramework::Converter::Converter()
07027efc 000000e8 T CTRPluginFramework::Converter::Converter()
07027fe4 00000010 T CTRPluginFramework::Converter::Instance()
07027ff4 00000114 T CTRPluginFramework::Converter::_Draw()
07028108 000002b0 T CTRPluginFramework::Converter::operator()(unsigned long)
070283b8 00000288 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07028640 0000023c T CTRPluginFramework::Icon::DrawAbout(int, int)
0702887c 00000248 T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07028ac4 00000248 T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07028d0c 00000248 T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07028f54 00000248 T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0702919c 00000248 T CTRPluginFramework::Icon::DrawClose(int, int, bool)
070293e4 0000023c T CTRPluginFramework::Icon::DrawController(int, int)
07029620 00000248 T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07029868 00000248 T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07029ab0 00000248 T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07029cf8 00000248 T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
07029f40 0000023c T CTRPluginFramework::Icon::DrawFolder(int, int)
0702a17c 00000248 T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0702a3c4 0000023c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0702a600 0000023c T CTRPluginFramework::Icon::DrawFile(int, int)
0702a83c 0000023c T CTRPluginFramework::Icon::DrawGameController(int, int)
0702aa78 00000248 T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0702acc0 0000023c T CTRPluginFramework::Icon::DrawGrid(int, int)
0702aefc 00000248 T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0702b144 0000023c T CTRPluginFramework::Icon::DrawGuide(int, int)
0702b380 00000224 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0702b5a4 00000248 T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0702b7ec 0000023c T CTRPluginFramework::Icon::DrawMore(int, int)
0702ba28 00000248 T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0702bc70 0000023c T CTRPluginFramework::Icon::DrawRAM(int, int)
0702beac 0000023c T CTRPluginFramework::Icon::DrawRestart(int, int)
0702c0e8 0000023c T CTRPluginFramework::Icon::DrawRocket(int, int)
0702c324 0000023c T CTRPluginFramework::Icon::DrawSave(int, int)
0702c560 0000023c T CTRPluginFramework::Icon::DrawSearch(int, int)
0702c79c 0000023c T CTRPluginFramework::Icon::DrawSettings(int, int)
0702c9d8 0000023c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0702cc14 0000023c T CTRPluginFramework::Icon::DrawTools(int, int)
0702ce50 00000248 T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0702d098 0000023c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0702d2d4 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
0702d2f0 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
0702d328 00000028 T CTRPluginFramework::Window::~Window()
0702d328 00000028 T CTRPluginFramework::Window::~Window()
0702d350 00000064 T CTRPluginFramework::Window::Draw() const
0702d3b4 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0702d490 00000018 T CTRPluginFramework::Window::DrawButton() const
0702d4a8 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0702d4c0 00000018 T CTRPluginFramework::Window::MustClose() const
0702d4d8 00000028 T CTRPluginFramework::Window::Close() const
0702d500 00000004 T CTRPluginFramework::Window::GetRect() const
0702d504 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
0702d538 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0702d618 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
0702d638 00000008 W CTRPluginFramework::Drawable::operator()()
0702d640 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0702d640 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0702d654 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
0702d654 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
0702d674 0000002c T CTRPluginFramework::UIContainer::Draw()
0702d6a0 0000003c T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
0702d6dc 00000110 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0702d7ec 0000003c T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
0702d828 0000010c T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0702d828 0000010c T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0702d934 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
0702d93c 00000038 T CTRPluginFramework::TouchKeyString::CanUse()
0702d974 0000010c T CTRPluginFramework::TouchKeyString::Draw()
0702da80 0000012c T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
0702dbac 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
0702dbc4 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
0702dbd8 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
0702dbf0 00000078 T CTRPluginFramework::TouchKeyString::operator()()
0702dc68 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
0702dc70 000000f0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
0702dd60 00000054 T CTRPluginFramework::TouchKey::~TouchKey()
0702dd60 00000054 T CTRPluginFramework::TouchKey::~TouchKey()
0702ddb4 0000005c T CTRPluginFramework::TouchKey::~TouchKey()
0702de10 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0702de10 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0702de9c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0702de9c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0702df54 00000090 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0702df54 00000090 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0702dfe4 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
0702dfec 00000080 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
0702e06c 00000074 T CTRPluginFramework::TouchKey::Draw()
0702e0e0 000000b8 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e198 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0702e1a0 00000110 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
0702e2b0 000001f8 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0702e2b0 000001f8 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0702e4a8 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702e4ac 00000304 T CTRPluginFramework::TextBox::Draw()
0702e7b0 00000040 W CTRPluginFramework::TextBox::~TextBox()
0702e7b0 00000040 W CTRPluginFramework::TextBox::~TextBox()
0702e7f0 00000048 W CTRPluginFramework::TextBox::~TextBox()
0702e838 00000098 T CTRPluginFramework::TextBox::TextBox()
0702e838 00000098 T CTRPluginFramework::TextBox::TextBox()
0702e8d0 0000000c T CTRPluginFramework::TextBox::Open() const
0702e8dc 0000000c T CTRPluginFramework::TextBox::Close() const
0702e8e8 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0702e8f0 00000258 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0702eb48 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0702eb54 000000a0 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0702ebf4 000000d8 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0702eccc 00000110 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
0702eddc 00000110 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char*&&)
0702eeec 00000288 T CTRPluginFramework::TextBox::_GetTextInfos()
0702f174 000001e4 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702f174 000001e4 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702f358 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f440 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0702f570 00000170 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0702f6e0 000001f0 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0702f8d0 00000244 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0702fb14 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0702fb78 000002e8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
0702fe60 00000548 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
070303a8 00000454 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
070307fc 0000006c T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07030868 00000068 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
070308d0 00000088 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07030958 0000019c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07030af4 000001b0 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07030ca4 000000bc T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07030d60 00000220 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07030f80 00000044 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07030fc4 000001d0 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07031194 00000018 t __tcf_0
070311ac 000001d8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07031384 00000190 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07031514 00000098 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
070315ac 000000b4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07031660 00000340 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070319a0 000001d0 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
07031b70 0000010c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07031c7c 0000003c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07031cb8 000007a0 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07032458 000001f4 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0703264c 00000050 T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0703269c 00000314 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
070329b0 000000cc T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07032a7c 00000180 T CTRPluginFramework::Renderer::EndFrame(bool)
07032bfc 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
07032c20 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07032c40 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07032c6c 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07032ca0 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07032cc8 0000002c T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07032cf4 00000024 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07032d18 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07032d48 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07032d90 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07032dd4 00000170 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07032f44 00000148 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0703308c 00000150 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
070331dc 00000164 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07033340 0000016c T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
070334ac 00000124 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070335d0 00000030 T CTRPluginFramework::PrivColor::UseClamp(bool)
07033600 00000078 T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07033678 00000044 t __tls_init
07033678 00000044 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
070336c0 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask)
07033714 0000000c T CTRPluginFramework::OSDImpl::Lock()
07033720 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0703373c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07033748 000000ec T CTRPluginFramework::OSDImpl::PauseFrame()
07033838 000001dc T CTRPluginFramework::OSDImpl::WaitFramePaused()
07033a14 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07033ac0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
07033af0 000000b4 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
07033ba4 000000a4 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07033c48 00000048 t CTRPluginFramework::GetBuffer(unsigned long)
07033c90 000000cc t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07033d5c 00000080 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
07033ddc 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07033ddc 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07033e64 00000104 T CTRPluginFramework::OSDImpl::UpdateScreens()
07033f68 00000154 T CTRPluginFramework::InstallOSD()
070340bc 00000058 T CTRPluginFramework::OSDImpl::_Initialize()
07034114 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07034208 0000036c T CTRPluginFramework::OSDImpl::Update()
07034574 000000e8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0703465c 00000cbc T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int)
07035318 00000098 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
070353b0 000000a4 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07035454 00000098 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070354ec 00000030 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070354ec 00000030 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703551c 00000038 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07035554 00000080 T CTRPluginFramework::NumericTextBox::Draw()
070355d4 00000134 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07035708 0000006c T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07035708 0000006c T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07035774 000000fc T CTRPluginFramework::NumericTextBox::operator()()
07035870 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07035880 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07035890 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07035898 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070358a4 00000088 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0703592c 00000118 t CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0] [clone .isra.0]
07035a44 000002bc T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07035a44 000002bc T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07035d00 00000210 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07035d00 00000210 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07035f10 000002e0 T CTRPluginFramework::MessageBoxImpl::_Draw()
070361f0 00000208 T CTRPluginFramework::MessageBoxImpl::operator()()
070363f8 00000010 T CTRPluginFramework::Glyph::Width() const
07036408 0000050c T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07036918 00000428 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07036d40 000000ac T CTRPluginFramework::Font::Initialize()
07036dec 0000026c W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07037058 00000140 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07037198 00000090 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07037228 00000028 T CTRPluginFramework::Font::GetGlyph(char)
07037250 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07037294 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
0703731c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703731c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07037320 00000014 T CTRPluginFramework::FloatingButton::Draw()
07037334 00000014 T CTRPluginFramework::FloatingButton::operator()()
07037348 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703735c 00000160 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
070374bc 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070374bc 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070374fc 00000094 T CTRPluginFramework::ComboBox::Draw()
07037590 0000006c W CTRPluginFramework::ComboBox::~ComboBox()
070375fc 000000ac T CTRPluginFramework::ComboBox::operator()()
070376a8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07037758 00000064 W CTRPluginFramework::ComboBox::~ComboBox()
07037758 00000064 W CTRPluginFramework::ComboBox::~ComboBox()
070377bc 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070377bc 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0703780c 00000050 T CTRPluginFramework::ComboBox::Clear()
0703785c 00000060 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070378bc 00000098 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07037954 00000030 T CTRPluginFramework::Button::~Button()
07037954 00000030 T CTRPluginFramework::Button::~Button()
07037984 00000038 T CTRPluginFramework::Button::~Button()
070379bc 00000164 T CTRPluginFramework::Button::Draw()
07037b20 00000070 T CTRPluginFramework::Button::operator()()
07037b90 00000194 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07037d24 000001d0 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07037d24 000001d0 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07037ef4 00000024 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07037ef4 00000024 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07037f18 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07037f18 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07037fac 00000018 T CTRPluginFramework::Button::Enable(bool)
07037fc4 00000010 T CTRPluginFramework::Button::Enable()
07037fd4 00000010 T CTRPluginFramework::Button::Disable()
07037fe4 00000010 T CTRPluginFramework::Button::Lock()
07037ff4 00000010 T CTRPluginFramework::Button::Execute()
07038004 00000018 T CTRPluginFramework::Button::SetState(bool)
0703801c 00000010 T CTRPluginFramework::Button::GetState() const
0703802c 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07038034 00000104 t CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&) [clone .part.0]
07038138 000000ac T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07038138 000000ac T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
070381e4 00000044 T CTRPluginFramework::BMPImage::~BMPImage()
070381e4 00000044 T CTRPluginFramework::BMPImage::~BMPImage()
07038228 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07038230 00000008 T CTRPluginFramework::BMPImage::Width() const
07038238 00000008 T CTRPluginFramework::BMPImage::Height() const
07038240 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07038248 00000010 T CTRPluginFramework::BMPImage::data() const
07038258 00000034 T CTRPluginFramework::BMPImage::Unload()
0703828c 00000298 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07038524 0000022c T CTRPluginFramework::BMPImage::OptimiseForRendering()
07038750 000000cc T CTRPluginFramework::BMPImage::Draw(int, int)
0703881c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07038824 00000104 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07038928 000000a4 T CTRPluginFramework::BMPImage::_CreateBitmap()
070389cc 00000064 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070389cc 00000064 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07038a30 00000140 T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07038b70 00000728 T CTRPluginFramework::BMPImage::_LoadBitmap()
07039298 00000160 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039298 00000160 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070393f8 000008e0 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07039cd8 0000014c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07039e24 000000b4 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07039ed8 000000d4 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07039fac 0000090c T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703a8b8 00000420 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0703acd8 00000184 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0703ae5c 000001bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0703b018 000001bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0703b1d4 000001a4 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0703b378 000000ec T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0703b464 00000220 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0703b684 000002d8 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703b95c 000000c0 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0703ba1c 000000b8 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0703bad4 00000160 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0703bc34 00000140 T ARM_Disasm::Decode01(unsigned long)
0703bd74 00000078 T ARM_Disasm::Decode11(unsigned long)
0703bdec 00000058 T ARM_Disasm::DecodeMUL(unsigned long)
0703be44 00000118 T ARM_Disasm::DecodeALU(unsigned long)
0703bf5c 00000114 T ARM_Disasm::Decode00(unsigned long)
0703c070 00000054 T ARM_Disasm::Decode(unsigned long)
0703c0c4 00000110 W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
0703c1d4 0000056c T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0703c740 000003f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0703cb30 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703cb30 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703cba8 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703cbc4 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0703cc14 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0703ccc4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703ccc4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703cd10 000002a0 T CTRPluginFramework::MenuEntryActionReplay::Update()
0703cfb0 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0703d13c 00000144 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0703d280 00002684 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0703f904 000000a0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0703f9a4 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0703f9c4 00000150 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703fb14 0000042c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0703ff40 00000018 t __tcf_0
0703ff58 00000148 t std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::__find_if<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}> >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>, std::random_access_iterator_tag) [clone .constprop.0]
070400a0 00000118 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
070401b8 0000001c T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070401d4 000000d4 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070402a8 000007ac T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07040a54 00000138 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reallocate_map(unsigned int, bool)
07040b8c 000000e4 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::emplace_back<CTRPluginFramework::MenuFolderImpl*>(CTRPluginFramework::MenuFolderImpl*&&)
07040c70 00000eb0 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07041b20 000000c4 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07041be4 00000180 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07041d64 00000124 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07041e88 00000060 t __tcf_0
07041ee8 00000084 t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07041f6c 000030bc t CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)
07045028 00000140 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07045028 00000140 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07045168 00001894 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070469fc 00000378 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070469fc 00000378 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07046d74 00000308 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0704707c 00000090 T CTRPluginFramework::ARCodeEditor::_Update()
0704710c 00000118 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07047224 0000027c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
070474a0 00000080 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07047520 000003a0 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
070478c0 0000075c T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0704801c 00000d5c T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07048d78 0000063c t CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&) [clone .part.0]
070493b4 000001b4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07049568 0000009c T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07049604 00000238 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07049604 00000238 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0704983c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07049878 00000150 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070499c8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070499c8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070499ec 00000030 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07049a1c 0000015c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07049a1c 0000015c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07049b78 00000038 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07049b78 00000038 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07049bb0 000000c0 T CTRPluginFramework::ARCodeContext::Update()
07049c70 000000c0 T CTRPluginFramework::ARCodeContext::Clear()
07049d30 000000b8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07049de8 00000018 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
07049e00 000000c4 t CTRPluginFramework::Preferences::LoadBackgrounds() [clone .part.0]
07049ec4 0000011c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07049fe0 00000500 t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0704a4e0 000002c4 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0704a7a4 000000c4 T CTRPluginFramework::Preferences::LoadSettings()
0704a868 00000168 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0704a9d0 00000164 T CTRPluginFramework::Preferences::LoadSavedFavorites()
0704ab34 00000094 T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0704abc8 000001d4 T CTRPluginFramework::Preferences::WriteSettings()
0704ad9c 00000064 T CTRPluginFramework::Preferences::ApplyBacklight()
0704ae00 00000018 T CTRPluginFramework::Preferences::Initialize()
0704ae18 000000f8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0704af10 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0704af60 00000018 t __tcf_0
0704af78 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0704af78 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0704afa0 00000058 T CTRPluginFramework::LineWriter::~LineWriter()
0704afa0 00000058 T CTRPluginFramework::LineWriter::~LineWriter()
0704aff8 00000078 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0704b070 00000048 T CTRPluginFramework::LineWriter::Flush()
0704b0b8 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704b124 00000060 T CTRPluginFramework::LineWriter::Close()
0704b184 00000014 T CTRPluginFramework::Touch::IsDown()
0704b198 0000002c T CTRPluginFramework::Touch::GetPosition()
0704b1c4 00000020 T CTRPluginFramework::Time::AsSeconds() const
0704b1e4 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
0704b20c 00000170 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
0704b37c 0000003c T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0704b37c 0000003c T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0704b3b8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0704b3b8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0704b3d8 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
0704b42c 0000004c T CTRPluginFramework::ThreadEx::Join(bool)
0704b478 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
0704b480 00000124 W std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_unique<std::pair<unsigned long, ThreadVars*> >(std::pair<unsigned long, ThreadVars*>&&)
0704b5a4 000001d8 T __ctrpf_getThreadVars
0704b77c 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
0704b7b4 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
0704b7ec 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0704b7ec 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0704b7f0 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0704b7f4 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
0704b824 00000014 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0704b838 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
0704b83c 000000e4 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0704b83c 000000e4 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0704b920 00000048 T CTRPluginFramework::Task::Start() const
0704b968 0000004c T CTRPluginFramework::Task::Start(void*) const
0704b9b4 00000064 T CTRPluginFramework::Task::Wait() const
0704ba18 00000010 T CTRPluginFramework::System::IsNew3DS()
0704ba28 00000010 T CTRPluginFramework::System::Reboot()
0704ba38 00000074 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0704baac 0000000c T CTRPluginFramework::HookContext::GetCurrent()
0704bab8 00000030 T CTRPluginFramework::HookContext::GetCallCode()
0704bae8 00000044 T CTRPluginFramework::Hook::Hook()
0704bae8 00000044 T CTRPluginFramework::Hook::Hook()
0704bb2c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0704bb2c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0704bb54 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0704bb54 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0704bb68 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
0704bbcc 00000054 T CTRPluginFramework::Hook::~Hook()
0704bbcc 00000054 T CTRPluginFramework::Hook::~Hook()
0704bc20 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
0704bc3c 0000002c T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
0704bc68 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
0704bc78 00000138 T CTRPluginFramework::Hook::Enable()
0704bdb0 0000002c T CTRPluginFramework::Hook::Disable()
0704bddc 00000008 T CTRPluginFramework::Hook::GetContext() const
0704bde4 0000000c T CTRPluginFramework::FwkSettings::Get()
0704bdf0 000000c4 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0704beb4 00000020 T CTRPluginFramework::Controller::GetKeysDown()
0704bed4 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0704bef0 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0704bf0c 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0704bf28 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0704bf44 0000003c T CTRPluginFramework::Controller::Update()
0704bf80 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0704bf84 0000000c T CTRPluginFramework::Sound::Sound()
0704bf84 0000000c T CTRPluginFramework::Sound::Sound()
0704bf90 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0704bf90 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0704bfa4 0000003c T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704bfa4 0000003c T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704bfe0 000000c0 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
0704c0a0 00000080 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
0704c120 0000005c T CTRPluginFramework::Sound::~Sound()
0704c120 0000005c T CTRPluginFramework::Sound::~Sound()
0704c17c 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
0704c194 00000020 T CTRPluginFramework::Sound::Play()
0704c1b4 00000110 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
0704c2c4 00000090 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0704c354 00000014 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0704c354 00000014 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0704c368 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0704c368 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0704c384 00000394 t cwav_initialize
0704c718 000000f4 t cwav_stopImpl.part.0
0704c80c 00000004 T cwavUseEnvironment
0704c810 00000034 T cwavSetVAToPACallback
0704c844 00000050 T cwavLoad
0704c894 000004a4 T cwavPlay
0704cd38 00000064 T cwavStop
0704cd9c 00000170 T cwavFree
0704cf0c T __aeabi_read_tp
0704cf18 0000003c T fontEnsureMappedExtension
0704cf54 00000080 T MemPool::CoalesceRight(MemBlock*)
0704cfd4 00000174 T MemPool::Allocate(MemChunk&, unsigned long, int)
0704d148 000000fc T MemPool::Deallocate(MemChunk const&)
0704d244 00000030 T MemPool::GetFreeSpace()
0704d274 00000120 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704d274 00000120 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704d394 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
0704d39c 0000001c T CTRPluginFramework::SoundImpl::Play(int, int)
0704d3b8 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0704d3b8 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0704d3e0 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704d670 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704d918 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704dba8 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0704dbdc 00000348 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704df24 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0704df38 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0704df4c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0704df60 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0704df78 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0704df90 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0704dfa8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0704dfc0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0704dfd8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0704dff0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0704e008 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0704e020 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0704e038 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0704e03c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0704e040 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0704e068 00000094 t __tcf_0
0704e0fc 00000060 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0704e15c 00000210 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0704e36c 000000e0 t CTRPluginFramework::MenuHotkeyModifier()
0704e44c 00000230 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0704e67c 000000c4 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0704e740 00000250 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704e990 00000070 t CTRPluginFramework::Reboot()
0704ea00 00000074 t CTRPluginFramework::Shutdown()
0704ea74 00000294 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0704ed08 000018c4 t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
070505cc 0000015c T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07050728 0000141c T CTRPluginFramework::PluginMenuTools::InitMenu()
07051b44 00000308 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07051b44 00000308 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07051e4c 0000010c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07051f58 00000268 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070521c0 00000440 t CTRPluginFramework::UpdateScreenshotText()
07052600 00000158 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07052758 000001ac T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07052904 00000b7c t CTRPluginFramework::ScreenshotMenuCallback()
07053480 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
070534a0 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
070534fc 00000044 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07053540 00000184 t CTRPluginFramework::ClearSearchFolder()
070536c4 00000080 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07053744 0000011c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07053860 00000098 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
070538f8 00000348 T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07053c40 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07053c40 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07054280 000003ac T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0705462c 000000d4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07054700 00000744 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07054e44 00000120 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07054f64 00000354 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
070552b8 000000ec T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
070553a4 00000070 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07055414 000003a8 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070557bc 00000450 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07055c0c 000001c8 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07055c0c 000001c8 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07055dd4 00001180 T CTRPluginFramework::SearchMenu::Draw()
07056f54 000005b0 T CTRPluginFramework::SearchMenu::Update()
07057504 0000014c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07057650 000000cc T CTRPluginFramework::SearchMenu::_NewCheat()
0705771c 000001c4 T CTRPluginFramework::SearchMenu::_Edit()
070578e0 00000464 T CTRPluginFramework::SearchMenu::_Export()
07057d44 0000031c T CTRPluginFramework::SearchMenu::_ExportAll()
07058060 000001bc T CTRPluginFramework::SearchMenu::_ShowGame()
07058220 000005f8 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07058818 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07058838 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07058838 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07058858 00000028 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07058880 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
070588d8 00000080 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
070588d8 00000080 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07058958 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07058958 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070589c0 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070589c0 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07058a28 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07058a2c 00000048 T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07058a2c 00000048 T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07058a74 0000047c T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07058ef0 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07058fa0 000001a8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07059148 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07059170 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070591f4 0000012c W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07059320 00000470 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07059790 000005a0 T CTRPluginFramework::GatewayRAMDumper::operator()()
07059d30 00000004 T cwav_defaultVAToPA
07059d34 00000004 T cwavEnvUseEnvironment
07059d38 00000008 T cwavEnvGetEnvironment
07059d40 00000004 T cwavEnvInitialize
07059d44 00000004 T cwavEnvFinalize
07059d48 00000014 T cwavEnvCompatibleEncoding
07059d5c 00000008 T cwavEnvGetChannelAmount
07059d64 00000018 T cwavEnvIsChannelAvailable
07059d7c 000000f8 T cwavEnvPlay
07059e74 00000004 T cwavEnvChannelIsPlaying
07059e78 00000004 T cwavEnvStop
07059e7c 00000044 T CTRPluginFramework::Search::UpdateProgress()
07059ec0 0000004c T CTRPluginFramework::Search::Cancel()
07059f0c 000001ec T CTRPluginFramework::Search::CheckNextRegion()
0705a0f8 00000008 T CTRPluginFramework::Search::GetHeader() const
0705a100 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0705a148 000002d4 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0705a41c 0000000c T CTRPluginFramework::Search::GetType() const
0705a428 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0705a440 0000007c T CTRPluginFramework::Search::WriteHeader()
0705a4bc 0000051c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0705a4bc 0000051c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0705a9d8 00000120 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0705aaf8 000000a0 T CTRPluginFramework::Search::CreateIndexTable()
0705ab98 00000200 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705ab98 00000200 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705ad98 00000230 T CTRPluginFramework::Search::ExecuteSearch()
0705afc8 000000cc T CTRPluginFramework::Search32::FirstSearchUnknown()
0705b094 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
0705b158 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0705b208 00000098 T CTRPluginFramework::Search32::~Search32()
0705b208 00000098 T CTRPluginFramework::Search32::~Search32()
0705b2a0 0000001c T CTRPluginFramework::Search32::~Search32()
0705b2c0 00000278 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0705b2c0 00000278 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0705b538 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705b538 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705b558 00000158 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0705b6b0 000001e8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0705b898 00000144 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0705b9dc 000001c0 T CTRPluginFramework::Search32::SecondSearchSpecified()
0705bb9c 00000124 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0705bcc0 000001a8 T CTRPluginFramework::Search32::SecondSearchUnknown()
0705be68 00000188 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0705bff0 000001ec T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0705c1dc 000001ec T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0705c3c8 00000098 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0705c460 000005f4 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0705ca54 00000980 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705d3d4 00000958 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705dd2c 00000940 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705e66c 00000cc8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705f334 000004a8 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705f7dc 000004ac T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705fc88 000004a8 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07060130 00000670 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070607a0 00000d8c T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0706152c 000007ac T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07061cd8 00000468 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07062140 00000724 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07062864 00000930 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07063194 00000958 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07063aec 00000960 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0706444c 00000e60 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070652ac 0000000c T __sync_init
070652b8 00000018 T __sync_fini
070652d0 0000002c T syncArbitrateAddressWithTimeout
070652fc 0000001c T LightLock_Init
07065318 00000094 T LightLock_Lock
070653ac 00000044 T LightLock_TryLock
070653f0 00000040 T LightLock_Unlock
07065430 00000024 T RecursiveLock_Init
07065454 00000030 T RecursiveLock_Lock
07065484 00000078 T RecursiveLock_TryLock
070654fc 00000054 T RecursiveLock_Unlock
07065550 00000040 T LightEvent_Init
07065590 000000a4 T LightEvent_Clear
07065634 00000048 T LightEvent_Pulse
0706567c 000000c8 T LightEvent_Signal
07065744 000000b0 T LightEvent_Wait
070657f4 00000014 T LightSemaphore_Init
07065808 00000094 T LightSemaphore_Acquire
0706589c 00000064 T LightSemaphore_Release
07065900 00000084 W envGetHandle
07065984 00000050 W envDestroyHandles
070659d4 00000074 T osConvertVirtToPhys
07065a48 00000054 T osGetTimeRef
07065a9c 000000e4 T osGetTime
07065b80 00000074 T __libctru_gtod
07065bf4 0000009c T fontEnsureMapped
07065c90 000000fc T fontGlyphIndexFromCodePoint
07065d8c 0000006c T fontGetCharWidthInfo
07065df8 00000124 T srvInit
07065f1c 00000058 T srvExit
07065f74 00000080 T srvGetServiceHandleDirect
07065ff4 00000048 T srvGetServiceHandle
0706603c 00000038 T srvPublishToSubscriber
07066074 00000094 t mappableFindAddressWithin
07066108 00000028 T mappableInit
07066130 00000080 T mappableAlloc
070661b0 00000004 T mappableFree
070661b4 000000a4 T cfguInit
07066258 0000003c T cfguExit
07066294 00000054 T CFGU_GetSystemLanguage
070662e8 000000f0 T gspExit
070663d8 0000008c T acInit
07066464 0000003c T acExit
070664a0 000000a4 T amInit
07066544 0000003c T amExit
07066580 0000015c T aptSendCommand
070666dc 00000030 T aptHook
0706670c 00000030 T aptUnhook
0706673c 00000028 T APT_PrepareToCloseApplication
07066764 00000048 T APT_CloseApplication
070667ac 0000007c T APT_CheckNew3DS
07066828 00000048 T APT_GetSharedFont
07066870 00000024 W hidShouldUseIrrst
07066894 0000018c T hidInit
07066a20 000000e8 T hidExit
07066b08 00000294 T hidScanInput
07066d9c 00000010 T hidKeysHeld
07066dac 00000010 T hidKeysDown
07066dbc 00000010 T hidKeysUp
07066dcc 00000018 T hidTouchRead
07066de4 0000000c T srvPmGetSessionHandle
07066df0 000000c8 T fsInit
07066eb8 0000003c T fsExit
07066ef4 000000cc T FSUSER_OpenFile
07066fc0 000000bc T FSUSER_DeleteFile
0706707c 000000f8 T FSUSER_RenameFile
07067174 000000bc T FSUSER_DeleteDirectoryRecursively
07067230 000000d4 T FSUSER_CreateFile
07067304 000000c4 T FSUSER_CreateDirectory
070673c8 000000f8 T FSUSER_RenameDirectory
070674c0 000000b4 T FSUSER_OpenDirectory
07067574 00000094 T FSUSER_OpenArchive
07067608 00000058 T FSFILE_Read
07067660 00000060 T FSFILE_Write
070676c0 00000038 T FSFILE_GetSize
070676f8 00000028 T FSFILE_SetSize
07067720 0000003c T FSFILE_Close
0706775c 00000024 T FSFILE_Flush
07067780 00000028 T FSFILE_SetPriority
070677a8 00000050 T FSDIR_Read
070677f8 0000003c T FSDIR_Close
07067834 00000010 T rbtree_init
07067844 000001a0 t do_insert
070679e4 00000008 T rbtree_insert
070679ec 00000090 T rbtree_rotate
07067a7c 00000338 T rbtree_remove
07067db4 00000074 T rbtree_find
07067e28 00000060 T encode_utf16
07067e88 000000fc T encode_utf8
07067f84 000000e8 T utf16_to_utf8
0706806c 00000064 T decode_utf16
070680d0 0000013c T decode_utf8
0706820c 000000c0 T utf8_to_utf16
070682cc T svcQueryMemory
070682fc T svcExitProcess
07068304 T svcCreateThread
07068324 T svcExitThread
0706832c T svcSleepThread
07068334 T svcSetThreadPriority
0706833c T svcReleaseMutex
07068344 T svcCreateEvent
07068358 T svcSignalEvent
07068360 T svcClearEvent
07068368 T svcMapMemoryBlock
07068370 T svcUnmapMemoryBlock
07068378 T svcCreateAddressArbiter
0706838c T svcArbitrateAddress
070683a4 T svcArbitrateAddressNoTimeout
070683ac T svcCloseHandle
070683b4 T svcWaitSynchronization
070683bc T svcWaitSynchronizationN
070683e4 T svcDuplicateHandle
070683f8 T svcGetSystemTick
07068400 T svcGetSystemInfo
07068418 T svcGetProcessInfo
07068430 T svcConnectToPort
07068444 T svcSendSyncRequest
0706844c T svcOpenProcess
07068460 T svcBreak
07068468 T svcInvalidateProcessDataCache
07068470 T svcFlushProcessDataCache
07068478 T svcKernelSetState
07068480 T svcQueryProcessMemory
070684a4 00000160 T irrstInit
07068604 000000cc T irrstExit
070686d0 000000b0 T irrstScanInput
07068780 00000024 T irrstKeysHeld
070687a4 00000050 T rbtree_node_next
070687f4 00000004 T operator delete(void*)
070687f8 00000004 T operator delete(void*, std::nothrow_t const&)
070687fc 00000004 T operator delete[](void*)
07068800 00000060 T __cxa_guard_acquire
07068860 0000000c T __cxa_guard_release
0706886c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0706886c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0706888c 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
070688b8 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
070688b8 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
070688c8 00000014 T std::get_new_handler()
070688dc 0000005c T operator new(unsigned int)
07068938 0000001c T operator new(unsigned int, std::nothrow_t const&)
07068954 00000004 T operator new[](unsigned int)
07068958 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07068958 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07068978 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070689a4 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07068a10 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07068aec 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07068b30 00000004 T std::type_info::~type_info()
07068b30 00000004 T std::type_info::~type_info()
07068b34 00000008 T std::type_info::__is_pointer_p() const
07068b34 00000008 T std::type_info::__is_function_p() const
07068b3c 0000004c T std::type_info::operator==(std::type_info const&) const
07068b88 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07068ba0 00000014 T std::__detail::_List_node_base::_M_unhook()
07068bb4 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
07068c24 00000288 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
07068eac 0000002c T std::__throw_bad_alloc()
07068ed8 0000002c T std::__throw_bad_array_new_length()
07068f04 00000048 T std::__throw_logic_error(char const*)
07068f4c 00000048 T std::__throw_invalid_argument(char const*)
07068f94 00000048 T std::__throw_length_error(char const*)
07068fdc 00000048 T std::__throw_out_of_range(char const*)
07069024 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
070690a0 000000d0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
07069170 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
07069250 0000000c T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0706925c 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
070692cc 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0706934c 0000012c T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07069478 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
070694d0 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070694e4 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
07069568 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0706958c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
070695b0 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0706966c 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0706976c 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
070697e8 0000009c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07069884 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
070699a8 0000028c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07069c34 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07069cc4 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07069d68 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07069de0 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
07069e34 0000000c T std::bad_alloc::what() const
07069e40 00000020 T std::bad_alloc::~bad_alloc()
07069e40 00000020 T std::bad_alloc::~bad_alloc()
07069e60 0000002c T std::bad_alloc::~bad_alloc()
07069e8c 0000000c T std::bad_array_new_length::what() const
07069e98 00000020 T std::bad_array_new_length::~bad_array_new_length()
07069e98 00000020 T std::bad_array_new_length::~bad_array_new_length()
07069eb8 0000002c T std::bad_array_new_length::~bad_array_new_length()
07069ee4 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07069f40 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07069f54 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07069f54 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07069f74 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07069fa0 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0706a008 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0706a034 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0706a078 00000004 T operator delete(void*, unsigned int)
0706a07c 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0706a14c 00000098 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0706a1e4 00000044 T __cxa_allocate_exception
0706a228 00000030 T __cxa_free_exception
0706a258 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0706a298 T __cxa_end_cleanup
0706a2a8 00000134 T __cxa_type_match
0706a3dc 000000b4 T __cxa_begin_cleanup
0706a490 000000b4 T __gnu_end_cleanup
0706a544 000000cc T __cxa_begin_catch
0706a610 000000e0 T __cxa_end_catch
0706a6f0 00000004 T std::exception::~exception()
0706a6f0 00000004 T std::exception::~exception()
0706a6f4 00000004 T std::bad_exception::~bad_exception()
0706a6f4 00000004 T std::bad_exception::~bad_exception()
0706a6f8 0000000c T transaction clone for std::exception::what() const
0706a6f8 0000000c T std::exception::what() const
0706a704 0000000c T transaction clone for std::bad_exception::what() const
0706a704 0000000c T std::bad_exception::what() const
0706a710 00000018 T std::bad_exception::~bad_exception()
0706a728 0000000c T __cxa_get_globals_fast
0706a734 0000000c T __cxa_get_globals
0706a740 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0706a8ac 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0706a90c 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0706a9e4 000006f8 T __gxx_personality_v0
0706b0dc 00000014 T __cxxabiv1::__terminate(void (*)())
0706b0f0 00000018 T std::terminate()
0706b108 0000000c T __cxxabiv1::__unexpected(void (*)())
0706b114 00000018 T std::unexpected()
0706b12c 00000014 T std::get_terminate()
0706b140 00000014 T std::get_unexpected()
0706b154 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0706b1c4 00000070 T __cxa_init_primary_exception
0706b234 00000058 T __cxa_throw
0706b28c 000000b0 T __cxa_rethrow
0706b33c 00000008 T std::logic_error::what() const
0706b33c 00000008 T std::runtime_error::what() const
0706b344 00000064 T std::logic_error::~logic_error()
0706b344 00000064 T std::logic_error::~logic_error()
0706b3a8 00000064 T std::length_error::~length_error()
0706b3a8 00000064 T std::length_error::~length_error()
0706b40c 00000064 T std::out_of_range::~out_of_range()
0706b40c 00000064 T std::out_of_range::~out_of_range()
0706b470 00000064 T std::invalid_argument::~invalid_argument()
0706b470 00000064 T std::invalid_argument::~invalid_argument()
0706b4d4 0000006c T std::logic_error::~logic_error()
0706b540 0000006c T std::out_of_range::~out_of_range()
0706b5ac 0000006c T std::invalid_argument::~invalid_argument()
0706b618 0000006c T std::length_error::~length_error()
0706b684 000000d4 T std::logic_error::logic_error(char const*)
0706b684 000000d4 T std::logic_error::logic_error(char const*)
0706b758 00000020 T std::invalid_argument::invalid_argument(char const*)
0706b758 00000020 T std::invalid_argument::invalid_argument(char const*)
0706b778 00000020 T std::length_error::length_error(char const*)
0706b778 00000020 T std::length_error::length_error(char const*)
0706b798 00000020 T std::out_of_range::out_of_range(char const*)
0706b798 00000020 T std::out_of_range::out_of_range(char const*)
0706b7b8 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0706b840 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0706b844 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0706b8b4 0000002c T __cxa_call_terminate
0706b8e0 00000154 T __cxa_call_unexpected
0706ba38 0000028c T log2
0706bcc4 00000024 t with_errno
0706bce8 00000050 T __math_divzero
0706bd38 0000001c T __math_invalid
0706bd58 00000164 T ceil
0706bebc 000000b8 T ceilf
0706bf78 00000174 T floor
0706c0ec 00000070 T roundf
0706c15c 00000044 T __popcountsi2
0706c1a0 00000030 T __aeabi_f2lz
0706c1a0 00000030 T __fixsfdi
0706c1d0 00000040 T __aeabi_f2ulz
0706c1d0 00000040 T __fixunssfdi
0706c210 00000120 T __udivmoddi4
0706c330 00000018 t selfrel_offset31
0706c348 00000090 t search_EIT_table
0706c3d8 00000040 t __gnu_unwind_get_pr_addr
0706c418 00000108 t get_eit_entry
0706c520 00000088 t restore_non_core_regs
0706c5a8 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0706c5bc 00000004 t _Unwind_DebugHook
0706c5c0 00000064 t unwind_phase2
0706c624 00000134 t unwind_phase2_forced
0706c758 000000a4 T __gnu_Unwind_RaiseException
0706c7fc 00000028 T __gnu_Unwind_ForcedUnwind
0706c824 00000074 T __gnu_Unwind_Resume
0706c898 00000020 T __gnu_Unwind_Resume_or_Rethrow
0706c8b8 00000004 T _Unwind_Complete
0706c8bc 00000018 T _Unwind_DeleteException
0706c8d4 0000005c T _Unwind_VRS_Get
0706c930 0000002c t _Unwind_GetGR
0706c95c 0000005c T _Unwind_VRS_Set
0706c9b8 0000002c t _Unwind_SetGR
0706c9e4 000000c0 T __gnu_Unwind_Backtrace
0706caa4 0000041c t __gnu_unwind_pr_common
0706cec0 00000008 T __aeabi_unwind_cpp_pr0
0706cec8 00000008 W __aeabi_unwind_cpp_pr1
0706ced0 00000008 W __aeabi_unwind_cpp_pr2
0706ced8 000003f4 T _Unwind_VRS_Pop
0706d2cc 00000064 t next_unwind_byte
0706d330 0000002c t _Unwind_GetGR.constprop.0
0706d35c 00000004 t unwind_UCB_from_context
0706d360 0000040c T __gnu_unwind_execute
0706d76c 00000048 T __gnu_unwind_frame
0706d7b4 00000010 T _Unwind_GetRegionStart
0706d7c4 0000001c T _Unwind_GetLanguageSpecificData
0706d7e0 00000008 T _Unwind_GetDataRelBase
0706d7e8 00000008 T _Unwind_GetTextRelBase
0706d7f0 00000014 T atexit
0706d804 00000028 T calloc
0706d82c 000000bc T _calloc_r
0706d8e8 00000010 T ctime
0706d8f8 0000000c T __errno
0706d904 00000160 T _fclose_r
0706da64 00000258 T __sflush_r
0706dcbc 00000094 T _fflush_r
0706dd50 0000000c T _cleanup_r
0706dd5c 00000184 T __sinit
0706dee0 0000000c T __sfp_lock_acquire
0706deec 0000000c T __sfp_lock_release
0706def8 000000f8 T _malloc_trim_r
0706dff0 000002e4 T _free_r
0706e2d4 00000070 T _fwalk_reent
0706e344 0000007c T __libc_init_array
0706e3c0 00000018 T isspace
0706e3d8 00000018 T isxdigit
0706e3f0 00000020 T localtime
0706e410 0000038c T localtime_r
0706e79c 00000138 T __smakebuf_r
0706e8d4 00000028 T memalign
0706e8fc 00000150 T _memalign_r
0706ea4c 00000020 T malloc
0706ea6c 00000020 T free
0706ea8c 000007e0 T _malloc_r
0706f26c 000000e0 T memchr
0706f34c 000000a8 T memcmp
0706f3f4 0000011c T memcpy
0706f510 00000154 T memmove
0706f664 00000118 T memset
0706f77c 0000000c T __malloc_lock
0706f788 0000000c T __malloc_unlock
0706f794 00000028 T realloc
0706f7bc 00000558 T _realloc_r
0706fd14 000000cc T snprintf
0706fde0 00000064 T sprintf
0706fe44 00000044 T __sread
0706fe88 00000008 T __seofread
0706fe90 00000068 T __swrite
0706fef8 00000048 T __sseek
0706ff40 00000008 T __sclose
0706ff48 00000128 t iso_year_adjust
07070070 00001094 t __strftime.isra.0
07071104 00000004 T strftime
07071108 0000005c T strlen
07071164 000000dc T strncmp
07071240 000000c0 T strncpy
07071300 00000048 T strnlen
07071348 00001368 T _strtod_l
070726b0 000000c4 T strtof
07072774 000001c4 t _strtoul_l.constprop.0
07072938 00000004 T _strtoul_r
0707293c 00000030 T strtoul
0707296c 00000628 t get_arg
07072f98 000035b8 T _svfprintf_r
07076550 0000003c T time
0707658c 00000248 T __tzcalc_limits
070767d4 0000000c T __tz_lock
070767e0 0000000c T __tz_unlock
070767ec 00000010 T _tzset_unlocked
070767fc 00000474 T _tzset_unlocked_r
07076c70 000000a4 T _vsnprintf_r
07076d14 00000038 T vsnprintf
07076d4c 00000054 T _wcrtomb_r
07076da0 00000028 T _wcsrtombs_r
07076dc8 0000000c T abs
07076dd4 00000020 T asctime
07076df4 00000080 T asctime_r
07076e74 000000b0 T __register_exitproc
07076f24 000001ac t quorem
070770d0 000012cc T _dtoa_r
0707839c 000000ec t rshift
07078488 00000904 T __gethex
07078d8c 0000004c T __match
07078dd8 0000029c T __hexnan
07079074 000000c8 T _findenv_r
0707913c 00000018 T _getenv_r
07079154 0000000c T __gettzinfo
07079160 00000250 T gmtime_r
070793b0 0000000c T labs
070793bc 0000000c T _localeconv_r
070793c8 00000010 T __locale_mb_cur_max
070793d8 000002e4 T __utf8_mbtowc
070796bc 00000088 T _Balloc
07079744 0000001c T _Bfree
07079760 000000f4 T __multadd
07079854 00000110 T __s2b
07079964 00000058 T __hi0bits
070799bc 00000094 T __lo0bits
07079a50 000000a4 T __i2b
07079af4 00000204 T __multiply
07079cf8 00000120 T __pow5mult
07079e18 0000013c T __lshift
07079f54 00000058 T __mcmp
07079fac 000001cc T __mdiff
0707a178 00000074 T __ulp
0707a1ec 000000d0 T __b2d
0707a2bc 00000124 T __d2b
0707a3e0 00000078 T __ratio
0707a458 00000088 T __copybits
0707a4e0 0000005c T __any_on
0707a53c 0000000c T nanf
0707a548 000000a8 T frexp
0707a5f0 00000064 T siprintf
0707a654 00000074 T siscanf
0707a6c8 00000010 T nan
0707a6d8 000000cc T sniprintf
0707a7a4 000000f0 T strcpy
0707a894 000001a4 t _strtol_l.part.0
0707aa38 0000003c T _strtol_r
0707aa74 00000628 t get_arg
0707b09c 00000190 T __ssprint_r
0707b22c 00002274 T _svfiprintf_r
0707d4a0 00000050 t get_arg
0707d4f0 000000e0 T _sungetc_r
0707d5d0 0000006c T __ssrefill_r
0707d63c 000000c8 T _sfread_r
0707d704 000022a0 T __ssvfiscanf_r
0707f9a4 000000a8 T __submore
0707fa4c 00000190 T _wcsnrtombs_l
0707fbdc 0000004c T _wcsnrtombs_r
0707fc28 000000f0 T __utf8_wctomb
0707fd18 00000054 T __assert_func
0707fd6c 0000000c T __env_lock
0707fd78 0000000c T __env_unlock
0707fd84 0000003c T fiprintf
0707fdc0 00000008 T iswspace
0707fdc8 00000068 T _mbrtowc_r
0707fe30 000000e4 T __sccl
0707ff14 0000022c t _strtoll_l.constprop.0
07080140 00000004 T _strtoll_r
07080144 00000244 t _strtoull_l.constprop.0
07080388 00000004 T _strtoull_r
0708038c 00000628 t get_arg
070809b4 00000030 T __sprint_r
070809e4 0000233c T _vfiprintf_r
07082d20 000000d4 t __sbprintf
07082df4 00000154 T __swsetup_r
07082f48 000004c0 T __sfvwrite_r
07083408 0000003c T iswspace_l
07083444 000001d4 t __jp2uc
07083618 0000009c T _jp2uc_l
070836b4 00000084 T category
07083738 00000078 T _fstat_r
070837b0 00000038 T _gettimeofday_r
070837e8 00000008 T _isatty_r
070837f0 00000084 T _lseek_r
07083874 00000080 T _read_r
070838f4 00000078 T _sbrk_r
0708396c 00000080 T _write_r
070839ec 00000008 T __flockfile
070839f4 00000008 T __funlockfile
070839fc 00000018 T __libc_lock_acquire
07083a14 00000018 T __libc_lock_release
07083a2c 00000018 T __libc_lock_init_recursive
07083a44 00000018 T __libc_lock_acquire_recursive
07083a5c 00000018 T __libc_lock_release_recursive
07083a74 00000018 T __libc_lock_close_recursive
07083a8c 0000003c T __get_handle
07083ac8 000000f4 T _close_r
07083bbc 00000028 T __getreent
07083be4 00000008 t null_write
07083bec 00000038 T __aeabi_d2lz
07083bec 00000038 T __fixdfdi
07083c28 00000040 T __aeabi_d2ulz
07083c28 00000040 T __fixunsdfdi
07083c68 T _fini
07084228 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0708422c 00000004 R CTRPluginFramework::Color::ForestGreen
07084230 00000004 R CTRPluginFramework::Color::Red
07084234 00000004 R CTRPluginFramework::Color::Blue
07084238 00000004 R CTRPluginFramework::Color::Cyan
0708423c 00000004 R CTRPluginFramework::Color::Gray
07084240 00000004 R CTRPluginFramework::Color::Black
07084244 00000004 R CTRPluginFramework::Color::Brown
07084248 00000004 R CTRPluginFramework::Color::Green
0708424c 00000004 R CTRPluginFramework::Color::White
07084250 00000004 R CTRPluginFramework::Color::Orange
07084254 00000004 R CTRPluginFramework::Color::Silver
07084258 00000004 R CTRPluginFramework::Color::Yellow
0708425c 00000004 R CTRPluginFramework::Color::DimGrey
07084260 00000004 R CTRPluginFramework::Color::Magenta
07084264 00000004 R CTRPluginFramework::Color::SkyBlue
07084268 00000004 R CTRPluginFramework::Color::DarkGrey
0708426c 00000004 R CTRPluginFramework::Color::BlackGrey
07084270 00000004 R CTRPluginFramework::Color::Gainsboro
07084274 00000004 R CTRPluginFramework::Color::LimeGreen
07084334 00000014 r CSWTCH.72
070844e8 00000014 r CTRPluginFramework::defaultSoundFiles
0708456c 00000030 r CTRPluginFramework::g_byme
0708459c 00000048 r CTRPluginFramework::g_ctrpf
07084674 00000014 V vtable for CTRPluginFramework::MenuItem
07084688 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
070846a0 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07084830 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07084838 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07084850 00000038 r CTRPluginFramework::ktable
07084888 00000038 r CTRPluginFramework::stable
07084a4c 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
07084a6c 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
07084a8c 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
07084aac 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
07084b00 0000001c R vtable for CTRPluginFramework::TouchKey
07084b1c 0000001c R vtable for CTRPluginFramework::TextBox
07084b38 00000a00 r font
07085584 00000058 r CTRPluginFramework::g_OSDPattern
070855dc 0000001c R vtable for CTRPluginFramework::NumericTextBox
07085604 0000001c R vtable for CTRPluginFramework::FloatingButton
07085620 0000001c R vtable for CTRPluginFramework::ComboBox
0708563c 0000001c R vtable for CTRPluginFramework::Button
07085658 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085d58 00000040 r cond_names
07085d98 00000010 r shift_names
07085da8 00000040 r RegNames
07085de8 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
070867b4 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07086834 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0708683c 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07086848 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0708685c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07086864 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07086920 00000008 R CTRPluginFramework::Time::Zero
07086928 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>
07086944 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0708694c 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
07086964 00000384 r UserManualFilled15_array
07086ce8 00000384 r Unsplash15_array
0708706c 00000384 r UnCheckedCheckbox_array
070873f0 000009c4 r TrashFilled25_array
07087db4 000009c4 r Trash25_array
07088778 00000384 r Star15_array
07088afc 00000384 r Shutdown15_array
07088e80 00000384 r Settings15_array
07089204 00000384 r Search15_array
07089588 000009c4 r Save25_array
07089f4c 00001900 r Rocket40_array
0708b84c 00000384 r Restart15_array
0708bbd0 00000384 r RAM15_array
0708bf54 000009c4 r PlusFilled25_array
0708c918 000009c4 r Plus25_array
0708d2dc 00000384 r More15_array
0708d660 00000384 r Maintenance15_array
0708d9e4 000009c4 r KeyboardFilled25_array
0708e3a8 000009c4 r Keyboard25_array
0708ed6c 000009c4 r InfoFilled25_array
0708f730 000009c4 r Info25_array
070900f4 00000384 r HandCursor15_array
07090478 00000384 r Grid15_array
070907fc 000009c4 r GameControllerFilled25_array
070911c0 000009c4 r GameController25_array
07091b84 00000384 r GameController15_array
07091f08 00000384 r FolderFilled_array
0709228c 00000384 r File15_array
07092610 00000384 r EnterKeyFilled15_array
07092994 00000384 r EnterKey15_array
07092d18 000009c4 r EditFilled25_array
070936dc 000009c4 r Edit25_array
070940a0 000009c4 r DuplicateFilled25_array
07094a64 000009c4 r Duplicate25_array
07095428 00000e10 r DefaultKeyboardCustomIcon_array
07096238 000009c4 r CutFilled25_array
07096bfc 000009c4 r Cut25_array
070975c0 00000384 r Controller15_array
07097944 00000640 r CloseWindowFilled20_array
07097f84 00000640 r CloseWindow20_array
070985c4 000009c4 r ClipboardFilled25_array
07098f88 000009c4 r Clipboard25_array
0709994c 00000384 r ClearSymbolFilled15_array
07099cd0 00000384 r ClearSymbol15_array
0709a054 00000384 r CheckedCheckbox_array
0709a3d8 00000384 r CapsLockOnFilled15_array
0709a75c 00000384 r CapsLockOn15_array
0709aae0 000009c4 r AddFavoriteFilled25_array
0709b4a4 000009c4 r AddFavorite25_array
0709be68 00000384 r About15_array
0709c8ac 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
0709c978 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
0709cc80 0000001c R vtable for CTRPluginFramework::MenuEntryTools
0709ce44 00000038 R vtable for CTRPluginFramework::Search
0709cea8 00000038 R vtable for CTRPluginFramework::Search32
0709cf68 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0709cf74 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0709cf98 00000014 R vtable for __gnu_cxx::recursive_init_error
0709cfac 00000001 R std::nothrow
0709cfb0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0709cfbc 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0709cfe4 0000002c R vtable for __cxxabiv1::__si_class_type_info
0709d010 00000008 R typeinfo for std::type_info
0709d018 0000000d R typeinfo name for std::type_info
0709d028 00000404 R std::__detail::__prime_list
0709d42c 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0709d43c 00000018 V typeinfo name for std::_Sp_make_shared_tag
0709d454 00000008 V typeinfo for std::_Sp_make_shared_tag
0709d538 0000000c R typeinfo for std::bad_alloc
0709d544 0000000d R typeinfo name for std::bad_alloc
0709d554 00000014 R vtable for std::bad_alloc
0709d584 0000000c R typeinfo for std::bad_array_new_length
0709d590 00000019 R typeinfo name for std::bad_array_new_length
0709d5ac 00000014 R vtable for std::bad_array_new_length
0709d5c0 0000000c R typeinfo for __cxxabiv1::__class_type_info
0709d5cc 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0709d5f0 0000002c R vtable for __cxxabiv1::__class_type_info
0709d640 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0709d648 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0709d650 0000000c R typeinfo for std::bad_exception
0709d65c 00000008 R typeinfo for std::exception
0709d664 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0709d684 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0709d6a8 00000012 R typeinfo name for std::bad_exception
0709d6bc 0000000d R typeinfo name for std::exception
0709d6cc 00000014 R vtable for std::bad_exception
0709d6e0 0000000c R typeinfo for std::logic_error
0709d6ec 0000000c R typeinfo for std::length_error
0709d6f8 0000000c R typeinfo for std::out_of_range
0709d704 0000000c R typeinfo for std::invalid_argument
0709d710 00000010 R typeinfo name for std::logic_error
0709d720 00000011 R typeinfo name for std::length_error
0709d734 00000011 R typeinfo name for std::out_of_range
0709d748 00000015 R typeinfo name for std::invalid_argument
0709d760 00000014 R vtable for std::logic_error
0709d774 00000014 R vtable for std::length_error
0709d788 00000014 R vtable for std::out_of_range
0709d79c 00000014 R vtable for std::invalid_argument
0709d7f8 00000890 R __log2_data
0709e088 00000004 R _global_impure_ptr
0709e08c 00000060 R __month_lengths
0709e174 00000014 r fpi.1
0709e188 00000014 r fpinan.0
0709e1a0 00000028 r tinytens
0709e204 00000010 r blanks.1
0709e214 00000010 r zeroes.0
0709e37c 000000fc R _C_time_locale
0709e4ec 00000015 r day_name.1
0709e504 00000024 r mon_name.0
0709e528 00000101 R _ctype_
0709e6d8 00000100 R __hexdig
0709e7d8 0000000c R _C_numeric_locale
0709e868 00000028 R __mprec_bigtens
0709e890 000000c8 R __mprec_tens
0709e958 0000000c r p05.0
0709e964 0000006c R __action_table
0709e9d0 00000100 R __chclass
0709ead0 0000006c R __state_table
0709eb3c 00000010 r blanks.1
0709eb4c 00000010 r zeroes.0
0709eb5c 00000022 r basefix.0
0709ebc0 00000010 r blanks.1
0709ebd0 00000010 r zeroes.0
0709ebf4 000000bc r a1
0709ecb0 000000bc r a2
0709ed6c 0000005b r a3
0709edc8 00000070 r a6
0709ee38 000000a2 r a7
0709eedc 00000040 r a8
0709ef1c 0000172a r b02cf
070a0648 00001a7c r d02f4
070a20c4 000031e6 r categories
070a52b4 00000070 R dotab_stdnull
070a5434 R __exidx_start
070a5684 R __exidx_end
070a5684 00000004 D cwavCurrentVAPAConvCallback
070a5688 00000001 D CTRPluginFramework::g_keepRunning
070a5689 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
070a568a 00000001 D CTRPluginFramework::SystemImpl::Language
070a568c 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070a5690 00000004 D CTRPluginFramework::Screenshot::Screens
070a5694 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
070a5695 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
070a5698 00000004 D CTRPluginFramework::RendererPriv::g_customColor
070a569c 000001f4 D opcode_names
070a5890 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070a5894 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070a5898 00000004 D CTRPluginFramework::FwkSettings::Header
070a589c 00000004 D g_charPerSheet
070a58a0 00000004 D UserManualFilled15
070a58a4 00000004 D Unsplash15
070a58a8 00000004 D UnCheckedCheckbox
070a58ac 00000004 D TrashFilled25
070a58b0 00000004 D Trash25
070a58b4 00000004 D Star15
070a58b8 00000004 D Shutdown15
070a58bc 00000004 D Settings15
070a58c0 00000004 D Search15
070a58c4 00000004 D Save25
070a58c8 00000004 D Rocket40
070a58cc 00000004 D Restart15
070a58d0 00000004 D RAM15
070a58d4 00000004 D PlusFilled25
070a58d8 00000004 D Plus25
070a58dc 00000004 D More15
070a58e0 00000004 D Maintenance15
070a58e4 00000004 D KeyboardFilled25
070a58e8 00000004 D Keyboard25
070a58ec 00000004 D InfoFilled25
070a58f0 00000004 D Info25
070a58f4 00000004 D HandCursor15
070a58f8 00000004 D Grid15
070a58fc 00000004 D GameControllerFilled25
070a5900 00000004 D GameController25
070a5904 00000004 D GameController15
070a5908 00000004 D FolderFilled
070a590c 00000004 D File15
070a5910 00000004 D EnterKeyFilled15
070a5914 00000004 D EnterKey15
070a5918 00000004 D EditFilled25
070a591c 00000004 D Edit25
070a5920 00000004 D DuplicateFilled25
070a5924 00000004 D Duplicate25
070a5928 00000004 D DefaultKeyboardCustomIcon
070a592c 00000004 D CutFilled25
070a5930 00000004 D Cut25
070a5934 00000004 D Controller15
070a5938 00000004 D CloseWindowFilled20
070a593c 00000004 D CloseWindow20
070a5940 00000004 D ClipboardFilled25
070a5944 00000004 D Clipboard25
070a5948 00000004 D ClearSymbolFilled15
070a594c 00000004 D ClearSymbol15
070a5950 00000004 D CheckedCheckbox
070a5954 00000004 D CapsLockOnFilled15
070a5958 00000004 D CapsLockOn15
070a595c 00000004 D AddFavoriteFilled25
070a5960 00000004 D AddFavorite25
070a5964 00000004 D About15
070a5968 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070a596c 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070a5970 00000004 d kCount
070a5974 00000004 d kDelay
070a5978 00000004 d kInterval
070a597c 00000004 D __cxxabiv1::__unexpected_handler
070a5980 00000004 D __cxxabiv1::__terminate_handler
070a5984 0000000c d __sfp_recursive_mutex
070a5990 0000000c d __sinit_recursive_mutex
070a599c 00000004 D _impure_ptr
070a59a0 00000460 d impure_data
070a5e00 00000408 D __malloc_av_
070a6208 00000004 D __malloc_sbrk_base
070a620c 00000004 D __malloc_trim_threshold
070a6210 0000000c d __malloc_recursive_mutex
070a621c 00000004 d __tz_mutex
070a6220 00000008 D _tzname
070a6228 0000000c D __atexit_recursive_mutex
070a6238 00000058 d tzinfo
070a6290 00000002 d numempty
070a6294 0000016c D __global_locale
070a6400 00000004 D environ
070a6404 0000000c d __env_recursive_mutex
070a6410 00000004 d __hndl_lock
070a6414 0000000c d __stderr_handle
070a6420 0000000c d __stdin_handle
070a642c 0000000c d __stdout_handle
070a6438 00001000 d handles
070a7438 0000008c D devoptab_list
070a74d8 d _GLOBAL_OFFSET_TABLE_
070a74e4 D __tdata_lma
070a74f0 d __frame_dummy_init_array_entry
070a74f0 D __init_array_start
070a74f0 B __preinit_array_end
070a74f0 B __preinit_array_start
070a74f0 D __tdata_lma_end
070a7554 d __do_global_dtors_aux_fini_array_entry
070a7554 D __init_array_end
070a75a8 D __bss_start__
070a75a8 00000004 B CTRPluginFramework::offset
070a75ac 000000b4 b CTRPluginFramework::original_speed
070a7660 00000004 B CTRPluginFramework::data
070a7664 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070a7670 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070a7674 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070a7678 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070a767c 00000004 b ncsndMutex
070a7680 00000004 b ncsndCmdCurOff
070a7684 00000004 b ncsndCmdStartOff
070a7688 00000004 B ncsndSharedMem
070a768c 00000004 B ncsndCSNDHandle
070a7690 00000004 B ncsndChannels
070a7694 00000004 b ncsndRefCount
070a7698 00000010 B ncsndOffsets
070a76a8 00000004 B ncsndSharedMemSize
070a76ac 00000004 b ncsndSharedMemBlock
070a76b0 00000001 b ncsndCookieHooked
070a76b4 0000000c b ncsndCookie
070a76c0 b saved_stack
070a76c8 00000004 b cwavListCount
070a76cc 00000004 b cwavList
070a76d0 00000004 b cwavAddedToList
070a76d4 b completed.1
070a76d8 b object.0
070a76f0 000009c4 b CTRPluginFramework::g_rng
070a80b4 00000004 B CTRPluginFramework::Process::OnPauseResume
070a80b8 00000004 B CTRPluginFramework::Process::exceptionCallback
070a80bc 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
070a80c0 00000004 b CTRPluginFramework::g_runningInstance
070a80c4 0000001c b CTRPluginFramework::g_dummy
070a80e0 00000180 b CTRPluginFramework::g_keyName
070a8260 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a8262 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a8264 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a8268 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a826c 00000004 b g_onLoadCroHook
070a8270 00000004 b g_onLoadCroLock
070a8274 00000004 B CTRPluginFramework::g_keepEvent
070a8278 00000008 B CTRPluginFramework::_sdmcArchive
070a8280 00000004 B CTRPluginFramework::g_keepThreadHandle
070a8284 00000004 B CTRPluginFramework::g_continueGameEvent
070a8288 00000008 b CTRPluginFramework::g_mainThread
070a8290 00001000 b CTRPluginFramework::keepThreadStack
070a9290 00000004 b g_mainThreadVars
070a9294 00000004 b plgEvent
070a9298 00000004 b plgLdrArbiter
070a929c 00000004 b plgLdrHandle
070a92a0 00000004 b plgLdrRefCount
070a92a4 00000004 b plgReply
070a92a8 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
070a92ac 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
070a92b0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
070a92b8 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
070a92c0 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
070a92c4 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
070a92c8 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
070a92d0 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
070a92d8 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
070a92dc 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
070a92e0 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
070a92e4 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
070a92ec 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
070a92f0 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
070a92f4 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
070a92f8 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
070a92fc 00000004 B CTRPluginFramework::SystemImpl::AptStatus
070a9300 00000008 b CTRPluginFramework::g_sleepEvent
070a9308 00000004 B CTRPluginFramework::Screenshot::_filecount
070a930c 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070a9314 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070a931c 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
070a9320 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070a9338 00000008 B CTRPluginFramework::Screenshot::Timer
070a9340 00000004 B CTRPluginFramework::Screenshot::_mode
070a9344 00000008 B CTRPluginFramework::Screenshot::_task
070a934c 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070a9368 00000008 B CTRPluginFramework::Screenshot::_timer
070a9370 00000004 B CTRPluginFramework::Screenshot::_display
070a9374 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
070a9378 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070a937c 00000004 b CTRPluginFramework::isReady
070a9380 00000004 B CTRPluginFramework::ScreenImpl::Top
070a9384 00000004 B CTRPluginFramework::ScreenImpl::Bottom
070a9388 000000ac b CTRPluginFramework::_botBuf
070a9434 000000ac b CTRPluginFramework::_topBuf
070a94e0 000000a8 B CTRPluginFramework::Scheduler::_singleton
070a9588 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070a958c 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
070a9598 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
070a959c 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
070a95a8 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
070a95b8 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
070a95bc 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070a95c0 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
070a95c4 00000004 B CTRPluginFramework::ProcessImpl::Status
070a95c8 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070a9630 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070a9638 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070a963c 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070a9640 00000044 b CTRPluginFramework::g_previousException
070a9684 0000001c B CTRPluginFramework::HookManager::_singleton
070a96a0 0000000c b sAddrMap
070a96ac 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
070a96b0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
070a96b4 00000008 b CTRPluginFramework::Heap::g_heapPool
070a96bc 0000000c b CTRPluginFramework::Heap::_mutex
070a96c8 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
070a96e0 0000000c B CTRPluginFramework::FSPath::FSMutex
070a96ec 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
070a96f0 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
070a96f4 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
070a9700 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
070a9704 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
070a9708 00000010 b CTRPluginFramework::SubMenu::Draw()::background
070a9718 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
070a9724 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
070a9728 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
070a972c 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070a9730 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a9734 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
070a9738 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070a973c 00000004 b CTRPluginFramework::g_bymeString
070a9740 00000004 b CTRPluginFramework::g_ctrpfString
070a9748 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070a9750 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a9758 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
070a9760 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
070a9768 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
070a976c 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070a9774 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070a9778 00000004 b CTRPluginFramework::g_radioId
070a977c 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070a9780 00000004 b CTRPluginFramework::__pmARinstance
070a9784 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070a978c 00000004 B CTRPluginFramework::MenuItem::_uidCounter
070a9790 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070a9794 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070a9798 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070a979c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a97a0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070a97a4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070a97a8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070a97ac 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070a97b0 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
070a97bc 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
070a97c8 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
070a97d8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070a97e0 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
070a97e4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070a97f4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070a9808 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a9810 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070a9820 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070a9830 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070a9840 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070a9850 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
070a9854 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070a9858 00000004 B CTRPluginFramework::__g_hexEditor
070a985c 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070a986c 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
070a9870 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
070a9874 00000010 b CTRPluginFramework::GuideReader::Draw()::background
070a9884 00000004 b CTRPluginFramework::__converter
070a9888 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
070a9898 00000028 B CTRPluginFramework::Window::BottomWindow
070a98c0 00000028 B CTRPluginFramework::Window::TopWindow
070a98e8 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070a98ec 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070a98f8 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
070a98fc 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
070a9900 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
070a9904 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
070a9910 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
070a9918 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
070a991c 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
070a9940 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
070a9958 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
070a995c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
070a9960 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
070a9964 0000000c B CTRPluginFramework::OSDImpl::Notifications
070a9970 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
070a9978 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
070a9980 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
070a9988 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
070a9990 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070a9998 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
070a999c 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
070a99a8 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
070a99ac 00000004 B CTRPluginFramework::OSDImpl::OSDHook
070a99b0 0000000c B CTRPluginFramework::OSDImpl::RecLock
070a99bc 0000000c B CTRPluginFramework::OSDImpl::Callbacks
070a99c8 00000018 B CTRPluginFramework::OSDImpl::TopScreen
070a99e0 00000050 b CTRPluginFramework::g_fpsCounter
070a9a30 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
070a9a34 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
070a9a50 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
070a9a54 00000004 B CTRPluginFramework::g_fontAllocated
070a9a58 00000004 B CTRPluginFramework::g_glyphAllocated
070a9a5c 0000000c B CTRPluginFramework::Font::_mutex
070a9a68 00000004 B CTRPluginFramework::ARHandler::ActiveData
070a9a6c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070a9a70 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
070a9a74 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070a9a78 00000010 B CTRPluginFramework::ARHandler::Data
070a9a88 00000008 B CTRPluginFramework::ARHandler::Offset
070a9a90 00000008 B CTRPluginFramework::ARHandler::Storage
070a9a98 00000001 b CTRPluginFramework::ToggleFloat
070a9aa0 00000fa0 b CTRPluginFramework::arStack
070aaa40 00000004 b CTRPluginFramework::g_context
070aaa44 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070aaa48 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070aaa54 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070aaa58 00000004 b CTRPluginFramework::__arCodeEditor
070aaa5c 00000001 b CTRPluginFramework::g_condAgainstData
070aaa5d 00000001 b CTRPluginFramework::g_newCondDataToggle
070aaa60 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070aaa6c 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
070aaa70 0000000c B CTRPluginFramework::g_codeTypes
070aaa7c 00000008 B CTRPluginFramework::Preferences::Backlights
070aaa84 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
070aaa9c 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
070aaab4 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
070aaacc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
070aaad0 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
070aaad4 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
070aaad8 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
070aaae0 00000008 B CTRPluginFramework::Preferences::Flags
070aaae8 000000a8 B CTRPluginFramework::Preferences::Settings
070aab90 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070aab94 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070aabac 0000000c b __mutex
070aabb8 00000018 b __threads
070aabd0 00000004 B CTRPluginFramework::System::OnAbort
070aabd4 00000004 B CTRPluginFramework::Controller::_keysReleased
070aabd8 00000004 B CTRPluginFramework::Controller::_keysDown
070aabdc 00000004 B CTRPluginFramework::Controller::_keysHeld
070aabe0 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070aabe4 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
070aabe8 00000004 b CTRPluginFramework::g_HookMode
070aabec 00000004 b CTRPluginFramework::g_OpenFileLock
070aabf0 00000040 b CTRPluginFramework::g_hookExportFile
070aac30 00000004 b CTRPluginFramework::g_screenshotEntry
070aac34 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
070aac38 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
070aac3c 00000004 b CTRPluginFramework::g_mode
070aac40 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070aac48 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
070aac4c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070aac50 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070aac54 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070aac64 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070aac74 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070aac78 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070aac80 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070aac88 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070aac90 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070aac94 00000001 b CTRPluginFramework::g_progressLoop
070aac98 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070aaca8 00000004 B CTRPluginFramework::_pool
070aacac 00000004 b arbiter
070aacb0 00000004 B g_sharedFont
070aacb4 00000004 b sharedFontAddr
070aacb8 00000004 b srvHandle
070aacbc 00000004 b srvRefCount
070aacc0 00000004 b currentAddr
070aacc4 00000004 b maxAddr
070aacc8 00000004 b minAddr
070aaccc 00000004 b cfguHandle
070aacd0 00000004 b cfguRefCount
070aacd4 00000004 b gspEvent
070aacd8 00000004 b gspEventThread
070aacdc 00000004 b gspGpuHandle
070aace0 00000001 b gspGpuRight
070aace4 00000004 b gspRefCount
070aace8 00000001 b gspRunEvents
070aacec 00000004 b gspSharedMem
070aacf0 00000004 b gspSharedMemHandle
070aacf4 00000004 b acHandle
070aacf8 00000004 b acRefCount
070aacfc 00000004 b amHandle
070aad00 00000004 b amRefCount
070aad04 0000000c b aptFirstHook
070aad10 00000004 b aptLockHandle
070aad14 00000001 b flagInit.1
070aad15 00000001 b flagValue.0
070aad18 00000004 b serviceName.6
070aad1c 00000006 b aVec
070aad24 00000004 b cPos
070aad28 00000006 b gRate
070aad30 00000014 B hidEvents
070aad44 00000004 B hidHandle
070aad48 00000004 B hidMemHandle
070aad4c 00000004 b hidRefCount
070aad50 00000004 B hidSharedMem
070aad54 00000004 b kDown
070aad58 00000004 b kHeld
070aad5c 00000004 b kOld
070aad60 00000004 b kRepeat
070aad64 00000004 b kUp
070aad68 00000004 b tPos
070aad6c 00000001 b usingIrrst
070aad70 00000004 b srvPmHandle
070aad78 00000080 b fsExemptArchives
070aadf8 00000004 b fsuHandle
070aadfc 00000004 b fsuRefCount
070aae00 00000004 B __ctru_heap
070aae04 00000004 V __ctru_heap_size
070aae08 00000004 B __ctru_linear_heap
070aae0c 00000004 b csPos
070aae10 00000004 B irrstEvent
070aae14 00000004 B irrstHandle
070aae18 00000004 B irrstMemHandle
070aae1c 00000004 b irrstRefCount
070aae20 00000004 B irrstSharedMem
070aae24 00000004 b kHeld
070aae28 00000004 b (anonymous namespace)::__new_handler
070aae2c 00000010 b (anonymous namespace)::emergency_pool
070aae3c 0000000c b eh_globals
070aae48 00000010 V std::string::_Rep::_S_empty_rep_storage
070aae58 00000028 B __malloc_current_mallinfo
070aae80 00000004 B __malloc_max_sbrked_mem
070aae84 00000004 B __malloc_max_total_mem
070aae88 00000004 B __malloc_top_pad
070aae8c 0000000b b __tzname_dst
070aae98 0000000b b __tzname_std
070aaea4 00000004 b prev_tzenv
070aaea8 00000004 B _daylight
070aaeac 00000004 B _timezone
070aaeb0 00000004 b initial_env
070aaeb4 00000004 b heap_start.0
070aaeb8 00000004 B fake_heap_end
070aaebc 00000004 B fake_heap_start
070aaec0 00000048 B __syscalls
070aaf08 B __tls_start
070aaf30 B __bss_end__
070aaf30 A __end__
070aaf30 B __tls_end
